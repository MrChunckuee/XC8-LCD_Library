

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Sep 27 00:08:10 2025

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32  0000                     
    33                           ; Version 2.35
    34                           ; Generated 05/05/2021 GMT
    35                           ; 
    36                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F25K22 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     
    69                           	psect	idataCOMRAM
    70  00112A                     __pidataCOMRAM:
    71                           	callstack 0
    72                           
    73                           ;initializer for _LCD
    74  00112A  93                 	db	147
    75  00112B  0F                 	db	15
    76  00112C  81                 	db	129
    77  00112D  0F                 	db	15
    78  00112E  00                 	db	0
    79  00112F  01                 	db	1
    80  001130  04                 	db	4
    81  001131  05                 	db	5
    82  001132  06                 	db	6
    83  001133  07                 	db	7
    84                           
    85                           	psect	idataBANK0
    86  000E4E                     __pidataBANK0:
    87                           	callstack 0
    88                           
    89                           ;initializer for _blocks_digits
    90  000E4E  FF                 	db	255
    91  000E4F  FF                 	db	255
    92  000E50  FF                 	db	255
    93  000E51  FF                 	db	255
    94  000E52  FE                 	db	254
    95  000E53  FF                 	db	255
    96  000E54  FE                 	db	254
    97  000E55  FF                 	db	255
    98  000E56  00                 	db	0
    99  000E57  FF                 	db	255
   100  000E58  FF                 	db	255
   101  000E59  01                 	db	1
   102  000E5A  00                 	db	0
   103  000E5B  FF                 	db	255
   104  000E5C  01                 	db	1
   105  000E5D  FF                 	db	255
   106  000E5E  FF                 	db	255
   107  000E5F  01                 	db	1
   108  000E60  FE                 	db	254
   109  000E61  FF                 	db	255
   110  000E62  FF                 	db	255
   111  000E63  00                 	db	0
   112  000E64  01                 	db	1
   113  000E65  FF                 	db	255
   114  000E66  FF                 	db	255
   115  000E67  00                 	db	0
   116  000E68  FF                 	db	255
   117  000E69  FF                 	db	255
   118  000E6A  00                 	db	0
   119  000E6B  FF                 	db	255
   120  000E6C  FE                 	db	254
   121  000E6D  FF                 	db	255
   122  000E6E  02                 	db	2
   123  000E6F  02                 	db	2
   124  000E70  03                 	db	3
   125  000E71  03                 	db	3
   126  000E72  FF                 	db	255
   127  000E73  FF                 	db	255
   128  000E74  01                 	db	1
   129  000E75  FF                 	db	255
   130                           
   131                           ;initializer for _square_four_digits
   132  000E76  FF                 	db	255
   133  000E77  FF                 	db	255
   134  000E78  03                 	db	3
   135  000E79  02                 	db	2
   136  000E7A  04                 	db	4
   137  000E7B  05                 	db	5
   138  000E7C  FE                 	db	254
   139  000E7D  05                 	db	5
   140  000E7E  06                 	db	6
   141  000E7F  02                 	db	2
   142  000E80  03                 	db	3
   143  000E81  06                 	db	6
   144  000E82  00                 	db	0
   145  000E83  02                 	db	2
   146  000E84  01                 	db	1
   147  000E85  02                 	db	2
   148  000E86  07                 	db	7
   149  000E87  01                 	db	1
   150  000E88  FE                 	db	254
   151  000E89  05                 	db	5
   152  000E8A  03                 	db	3
   153  000E8B  06                 	db	6
   154  000E8C  06                 	db	6
   155  000E8D  02                 	db	2
   156  000E8E  03                 	db	3
   157  000E8F  06                 	db	6
   158  000E90  03                 	db	3
   159  000E91  02                 	db	2
   160  000E92  00                 	db	0
   161  000E93  02                 	db	2
   162  000E94  FE                 	db	254
   163  000E95  05                 	db	5
   164  000E96  03                 	db	3
   165  000E97  02                 	db	2
   166  000E98  03                 	db	3
   167  000E99  02                 	db	2
   168  000E9A  03                 	db	3
   169  000E9B  02                 	db	2
   170  000E9C  06                 	db	6
   171  000E9D  02                 	db	2
   172                           
   173                           ;initializer for _tron_bold_digits
   174  000E9E  04                 	db	4
   175  000E9F  02                 	db	2
   176  000EA0  07                 	db	7
   177  000EA1  FF                 	db	255
   178  000EA2  FE                 	db	254
   179  000EA3  05                 	db	5
   180  000EA4  FE                 	db	254
   181  000EA5  05                 	db	5
   182  000EA6  00                 	db	0
   183  000EA7  02                 	db	2
   184  000EA8  03                 	db	3
   185  000EA9  06                 	db	6
   186  000EAA  00                 	db	0
   187  000EAB  02                 	db	2
   188  000EAC  01                 	db	1
   189  000EAD  FF                 	db	255
   190  000EAE  07                 	db	7
   191  000EAF  01                 	db	1
   192  000EB0  FE                 	db	254
   193  000EB1  05                 	db	5
   194  000EB2  03                 	db	3
   195  000EB3  06                 	db	6
   196  000EB4  01                 	db	1
   197  000EB5  FF                 	db	255
   198  000EB6  03                 	db	3
   199  000EB7  06                 	db	6
   200  000EB8  03                 	db	3
   201  000EB9  FF                 	db	255
   202  000EBA  00                 	db	0
   203  000EBB  02                 	db	2
   204  000EBC  FE                 	db	254
   205  000EBD  05                 	db	5
   206  000EBE  03                 	db	3
   207  000EBF  02                 	db	2
   208  000EC0  03                 	db	3
   209  000EC1  FF                 	db	255
   210  000EC2  03                 	db	3
   211  000EC3  02                 	db	2
   212  000EC4  FE                 	db	254
   213  000EC5  02                 	db	2
   214                           
   215                           	psect	smallconst
   216  000600                     __psmallconst:
   217                           	callstack 0
   218  000600  00                 	db	0
   219  000601                     _blocks_chars:
   220                           	callstack 0
   221  000601  1F                 	db	31
   222  000602  1F                 	db	31
   223  000603  1F                 	db	31
   224  000604  1F                 	db	31
   225  000605  00                 	db	0
   226  000606  00                 	db	0
   227  000607  00                 	db	0
   228  000608  00                 	db	0
   229  000609  00                 	db	0
   230  00060A  00                 	db	0
   231  00060B  00                 	db	0
   232  00060C  00                 	db	0
   233  00060D  1F                 	db	31
   234  00060E  1F                 	db	31
   235  00060F  1F                 	db	31
   236  000610  1F                 	db	31
   237  000611  1F                 	db	31
   238  000612  1F                 	db	31
   239  000613  1F                 	db	31
   240  000614  1F                 	db	31
   241  000615  1F                 	db	31
   242  000616  1F                 	db	31
   243  000617  1F                 	db	31
   244  000618  00                 	db	0
   245  000619  00                 	db	0
   246  00061A  1F                 	db	31
   247  00061B  1F                 	db	31
   248  00061C  1F                 	db	31
   249  00061D  1F                 	db	31
   250  00061E  1F                 	db	31
   251  00061F  1F                 	db	31
   252  000620  1F                 	db	31
   253  000621  00                 	db	0
   254  000622  00                 	db	0
   255  000623  00                 	db	0
   256  000624  00                 	db	0
   257  000625  00                 	db	0
   258  000626  00                 	db	0
   259  000627  00                 	db	0
   260  000628  00                 	db	0
   261  000629  00                 	db	0
   262  00062A  00                 	db	0
   263  00062B  00                 	db	0
   264  00062C  00                 	db	0
   265  00062D  00                 	db	0
   266  00062E  00                 	db	0
   267  00062F  00                 	db	0
   268  000630  00                 	db	0
   269  000631  00                 	db	0
   270  000632  00                 	db	0
   271  000633  00                 	db	0
   272  000634  00                 	db	0
   273  000635  00                 	db	0
   274  000636  00                 	db	0
   275  000637  00                 	db	0
   276  000638  00                 	db	0
   277  000639  00                 	db	0
   278  00063A  00                 	db	0
   279  00063B  00                 	db	0
   280  00063C  00                 	db	0
   281  00063D  00                 	db	0
   282  00063E  00                 	db	0
   283  00063F  00                 	db	0
   284  000640  00                 	db	0
   285  000641                     __end_of_blocks_chars:
   286                           	callstack 0
   287  000641                     _square_four_chars:
   288                           	callstack 0
   289  000641  1F                 	db	31
   290  000642  1F                 	db	31
   291  000643  1C                 	db	28
   292  000644  1C                 	db	28
   293  000645  00                 	db	0
   294  000646  00                 	db	0
   295  000647  00                 	db	0
   296  000648  00                 	db	0
   297  000649  00                 	db	0
   298  00064A  00                 	db	0
   299  00064B  00                 	db	0
   300  00064C  00                 	db	0
   301  00064D  1C                 	db	28
   302  00064E  1C                 	db	28
   303  00064F  1F                 	db	31
   304  000650  1F                 	db	31
   305  000651  1F                 	db	31
   306  000652  1F                 	db	31
   307  000653  0F                 	db	15
   308  000654  0F                 	db	15
   309  000655  0F                 	db	15
   310  000656  0F                 	db	15
   311  000657  1F                 	db	31
   312  000658  1F                 	db	31
   313  000659  1F                 	db	31
   314  00065A  1F                 	db	31
   315  00065B  1E                 	db	30
   316  00065C  1E                 	db	30
   317  00065D  1E                 	db	30
   318  00065E  1E                 	db	30
   319  00065F  1F                 	db	31
   320  000660  1F                 	db	31
   321  000661  01                 	db	1
   322  000662  03                 	db	3
   323  000663  07                 	db	7
   324  000664  0F                 	db	15
   325  000665  00                 	db	0
   326  000666  00                 	db	0
   327  000667  00                 	db	0
   328  000668  00                 	db	0
   329  000669  1E                 	db	30
   330  00066A  1E                 	db	30
   331  00066B  1E                 	db	30
   332  00066C  1E                 	db	30
   333  00066D  1E                 	db	30
   334  00066E  1E                 	db	30
   335  00066F  1E                 	db	30
   336  000670  1E                 	db	30
   337  000671  1F                 	db	31
   338  000672  1F                 	db	31
   339  000673  00                 	db	0
   340  000674  00                 	db	0
   341  000675  00                 	db	0
   342  000676  00                 	db	0
   343  000677  1F                 	db	31
   344  000678  1F                 	db	31
   345  000679  1E                 	db	30
   346  00067A  1E                 	db	30
   347  00067B  1E                 	db	30
   348  00067C  1E                 	db	30
   349  00067D  1E                 	db	30
   350  00067E  1E                 	db	30
   351  00067F  1F                 	db	31
   352  000680  1F                 	db	31
   353  000681                     __end_of_square_four_chars:
   354                           	callstack 0
   355  000681                     _tron_bold_chars:
   356                           	callstack 0
   357  000681  1F                 	db	31
   358  000682  18                 	db	24
   359  000683  00                 	db	0
   360  000684  00                 	db	0
   361  000685  00                 	db	0
   362  000686  00                 	db	0
   363  000687  00                 	db	0
   364  000688  00                 	db	0
   365  000689  00                 	db	0
   366  00068A  00                 	db	0
   367  00068B  00                 	db	0
   368  00068C  00                 	db	0
   369  00068D  00                 	db	0
   370  00068E  00                 	db	0
   371  00068F  18                 	db	24
   372  000690  1F                 	db	31
   373  000691  1F                 	db	31
   374  000692  07                 	db	7
   375  000693  07                 	db	7
   376  000694  07                 	db	7
   377  000695  07                 	db	7
   378  000696  07                 	db	7
   379  000697  07                 	db	7
   380  000698  07                 	db	7
   381  000699  1F                 	db	31
   382  00069A  1C                 	db	28
   383  00069B  1C                 	db	28
   384  00069C  1C                 	db	28
   385  00069D  1C                 	db	28
   386  00069E  1C                 	db	28
   387  00069F  1C                 	db	28
   388  0006A0  1F                 	db	31
   389  0006A1  1F                 	db	31
   390  0006A2  1C                 	db	28
   391  0006A3  1C                 	db	28
   392  0006A4  1C                 	db	28
   393  0006A5  1C                 	db	28
   394  0006A6  1C                 	db	28
   395  0006A7  1C                 	db	28
   396  0006A8  1C                 	db	28
   397  0006A9  1C                 	db	28
   398  0006AA  1C                 	db	28
   399  0006AB  1C                 	db	28
   400  0006AC  1C                 	db	28
   401  0006AD  1C                 	db	28
   402  0006AE  1C                 	db	28
   403  0006AF  1C                 	db	28
   404  0006B0  1C                 	db	28
   405  0006B1  1F                 	db	31
   406  0006B2  00                 	db	0
   407  0006B3  00                 	db	0
   408  0006B4  00                 	db	0
   409  0006B5  00                 	db	0
   410  0006B6  00                 	db	0
   411  0006B7  00                 	db	0
   412  0006B8  1F                 	db	31
   413  0006B9  1C                 	db	28
   414  0006BA  1C                 	db	28
   415  0006BB  1C                 	db	28
   416  0006BC  1C                 	db	28
   417  0006BD  1C                 	db	28
   418  0006BE  1C                 	db	28
   419  0006BF  1C                 	db	28
   420  0006C0  1F                 	db	31
   421  0006C1                     __end_of_tron_bold_chars:
   422                           	callstack 0
   423  0000                     _PORTA	set	3968
   424  0000                     _ANSELC	set	3898
   425  0000                     _ANSELB	set	3897
   426  0000                     _ANSELA	set	3896
   427  0000                     _PORTB	set	3969
   428  0000                     _TRISB	set	3987
   429  0000                     _TRISC	set	3988
   430  0000                     _RCONbits	set	4048
   431  0000                     _OSCCONbits	set	4051
   432  0000                     _TMR0L	set	4054
   433  0000                     _TMR0H	set	4055
   434  0000                     _INTCONbits	set	4082
   435  0000                     _PORTC	set	3970
   436  0000                     _TRISA	set	3986
   437  0000                     _INTCON2bits	set	4081
   438  0000                     _T0CONbits	set	4053
   439  0006C1                     STR_3:
   440  0006C1  6D                 	db	109	;'m'
   441  0006C2  72                 	db	114	;'r'
   442  0006C3  63                 	db	99	;'c'
   443  0006C4  68                 	db	104	;'h'
   444  0006C5  75                 	db	117	;'u'
   445  0006C6  6E                 	db	110	;'n'
   446  0006C7  63                 	db	99	;'c'
   447  0006C8  6B                 	db	107	;'k'
   448  0006C9  75                 	db	117	;'u'
   449  0006CA  65                 	db	101	;'e'
   450  0006CB  65                 	db	101	;'e'
   451  0006CC  2E                 	db	46
   452  0006CD  62                 	db	98	;'b'
   453  0006CE  6C                 	db	108	;'l'
   454  0006CF  6F                 	db	111	;'o'
   455  0006D0  67                 	db	103	;'g'
   456  0006D1  2D                 	db	45
   457  0006D2  00                 	db	0
   458  0006D3                     STR_2:
   459  0006D3  42                 	db	66	;'B'
   460  0006D4  49                 	db	73	;'I'
   461  0006D5  47                 	db	71	;'G'
   462  0006D6  20                 	db	32
   463  0006D7  44                 	db	68	;'D'
   464  0006D8  69                 	db	105	;'i'
   465  0006D9  67                 	db	103	;'g'
   466  0006DA  69                 	db	105	;'i'
   467  0006DB  74                 	db	116	;'t'
   468  0006DC  73                 	db	115	;'s'
   469  0006DD  20                 	db	32
   470  0006DE  74                 	db	116	;'t'
   471  0006DF  65                 	db	101	;'e'
   472  0006E0  73                 	db	115	;'s'
   473  0006E1  74                 	db	116	;'t'
   474  0006E2  00                 	db	0
   475  0006E3                     STR_1:
   476  0006E3  4D                 	db	77	;'M'
   477  0006E4  72                 	db	114	;'r'
   478  0006E5  43                 	db	67	;'C'
   479  0006E6  68                 	db	104	;'h'
   480  0006E7  75                 	db	117	;'u'
   481  0006E8  6E                 	db	110	;'n'
   482  0006E9  63                 	db	99	;'c'
   483  0006EA  6B                 	db	107	;'k'
   484  0006EB  75                 	db	117	;'u'
   485  0006EC  65                 	db	101	;'e'
   486  0006ED  65                 	db	101	;'e'
   487  0006EE  21                 	db	33
   488  0006EF  21                 	db	33
   489  0006F0  00                 	db	0
   490  0006F1                     STR_4:
   491  0006F1  73                 	db	115	;'s'
   492  0006F2  70                 	db	112	;'p'
   493  0006F3  6F                 	db	111	;'o'
   494  0006F4  74                 	db	116	;'t'
   495  0006F5  2E                 	db	46
   496  0006F6  63                 	db	99	;'c'
   497  0006F7  6F                 	db	111	;'o'
   498  0006F8  6D                 	db	109	;'m'
   499  0006F9  00                 	db	0
   500  0006FA  00                 	db	0	; dummy byte at the end
   501  0000                     
   502                           ; #config settings
   503                           
   504                           	psect	cinit
   505  000F2E                     __pcinit:
   506                           	callstack 0
   507  000F2E                     start_initialization:
   508                           	callstack 0
   509  000F2E                     __initialization:
   510                           	callstack 0
   511                           
   512                           ; Initialize objects allocated to BANK0 (120 bytes)
   513                           ; load TBLPTR registers with __pidataBANK0
   514  000F2E  0E4E               	movlw	low __pidataBANK0
   515  000F30  6EF6               	movwf	tblptrl,c
   516  000F32  0E0E               	movlw	high __pidataBANK0
   517  000F34  6EF7               	movwf	tblptrh,c
   518  000F36  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   519  000F38  6EF8               	movwf	tblptru,c
   520  000F3A  EE00  F060         	lfsr	0,__pdataBANK0
   521  000F3E  EE10 F078          	lfsr	1,120
   522  000F42                     copy_data0:
   523  000F42  0009               	tblrd		*+
   524  000F44  CFF5 FFEE          	movff	tablat,postinc0
   525  000F48  50E5               	movf	postdec1,w,c
   526  000F4A  50E1               	movf	fsr1l,w,c
   527  000F4C  E1FA               	bnz	copy_data0
   528                           
   529                           ; Initialize objects allocated to COMRAM (10 bytes)
   530                           ; load TBLPTR registers with __pidataCOMRAM
   531  000F4E  0E2A               	movlw	low __pidataCOMRAM
   532  000F50  6EF6               	movwf	tblptrl,c
   533  000F52  0E11               	movlw	high __pidataCOMRAM
   534  000F54  6EF7               	movwf	tblptrh,c
   535  000F56  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   536  000F58  6EF8               	movwf	tblptru,c
   537  000F5A  EE00  F03D         	lfsr	0,__pdataCOMRAM
   538  000F5E  EE10 F00A          	lfsr	1,10
   539  000F62                     copy_data1:
   540  000F62  0009               	tblrd		*+
   541  000F64  CFF5 FFEE          	movff	tablat,postinc0
   542  000F68  50E5               	movf	postdec1,w,c
   543  000F6A  50E1               	movf	fsr1l,w,c
   544  000F6C  E1FA               	bnz	copy_data1
   545                           
   546                           ; Clear objects allocated to COMRAM (16 bytes)
   547  000F6E  EE00  F02D         	lfsr	0,__pbssCOMRAM
   548  000F72  0E10               	movlw	16
   549  000F74                     clear_0:
   550  000F74  6AEE               	clrf	postinc0,c
   551  000F76  06E8               	decf	wreg,f,c
   552  000F78  E1FD               	bnz	clear_0
   553  000F7A                     end_of_initialization:
   554                           	callstack 0
   555  000F7A                     __end_of__initialization:
   556                           	callstack 0
   557  000F7A  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   558  000F7C  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   559  000F7E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   560  000F80  6EF8               	movwf	tblptru,c
   561  000F82  0100               	movlb	0
   562  000F84  EF56  F005         	goto	_main	;jump to C main() function
   563                           
   564                           	psect	bssCOMRAM
   565  00002D                     __pbssCOMRAM:
   566                           	callstack 0
   567  00002D                     _LCDisplay:
   568                           	callstack 0
   569  00002D                     	ds	10
   570  000037                     _RTCC_Count:
   571                           	callstack 0
   572  000037                     	ds	2
   573  000039                     _current_digits:
   574                           	callstack 0
   575  000039                     	ds	2
   576  00003B                     _LCDUpdate:
   577                           	callstack 0
   578  00003B                     	ds	1
   579  00003C                     _counter:
   580                           	callstack 0
   581  00003C                     	ds	1
   582                           
   583                           	psect	dataCOMRAM
   584  00003D                     __pdataCOMRAM:
   585                           	callstack 0
   586  00003D                     _LCD:
   587                           	callstack 0
   588  00003D                     	ds	10
   589                           
   590                           	psect	dataBANK0
   591  000060                     __pdataBANK0:
   592                           	callstack 0
   593  000060                     _blocks_digits:
   594                           	callstack 0
   595  000060                     	ds	40
   596  000088                     _square_four_digits:
   597                           	callstack 0
   598  000088                     	ds	40
   599  0000B0                     _tron_bold_digits:
   600                           	callstack 0
   601  0000B0                     	ds	40
   602                           
   603                           	psect	cstackCOMRAM
   604  000001                     __pcstackCOMRAM:
   605                           	callstack 0
   606  000001                     ??_LCD_Out:
   607  000001                     memcpy@d1:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x0
   611  000001                     	ds	2
   612  000003                     memcpy@s1:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x2
   616  000003                     	ds	2
   617  000005                     memcpy@n:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x4
   621  000005                     	ds	2
   622  000007                     memcpy@d:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x6
   626  000007                     	ds	2
   627  000009                     memcpy@s:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x8
   631  000009                     	ds	1
   632  00000A                     LCD_Out@c:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0x9
   636  00000A                     	ds	1
   637  00000B                     ??_LCD_Write:
   638  00000B                     memcpy@tmp:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0xA
   642  00000B                     	ds	3
   643  00000E                     LCD_Write@data:
   644                           	callstack 0
   645                           
   646                           ; 1 bytes @ 0xD
   647  00000E                     	ds	1
   648  00000F                     ??_LCD_Command:
   649  00000F                     ??_LCD_putc:
   650                           
   651                           ; 1 bytes @ 0xE
   652  00000F                     	ds	2
   653  000011                     LCD_putc@c:
   654                           	callstack 0
   655                           
   656                           ; 1 bytes @ 0x10
   657  000011                     	ds	1
   658  000012                     LCD_Command@cmd:
   659                           	callstack 0
   660  000012                     LCD_puts@a:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x11
   664  000012                     	ds	1
   665  000013                     LCD_DrawBigDigit@xpos:
   666                           	callstack 0
   667  000013                     LCD_createChar@charmap:
   668                           	callstack 0
   669  000013                     LCD_Init@display:
   670                           	callstack 0
   671                           
   672                           ; 10 bytes @ 0x12
   673  000013                     	ds	1
   674  000014                     ??_LCD_puts:
   675  000014                     LCD_DrawBigDigit@ypos:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0x13
   679  000014                     	ds	1
   680  000015                     ??_LCD_createChar:
   681  000015                     ??_LCD_DrawBigDigit:
   682                           
   683                           ; 1 bytes @ 0x14
   684  000015                     	ds	1
   685  000016                     LCD_createChar@location:
   686                           	callstack 0
   687  000016                     LCD_puts@i:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x15
   691  000016                     	ds	1
   692  000017                     LCD_DrawBigDigit@digit:
   693                           	callstack 0
   694  000017                     LCD_createChar@i:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x16
   698  000017                     	ds	1
   699  000018                     ??_LCD_SetFont:
   700                           
   701                           ; 1 bytes @ 0x17
   702  000018                     	ds	2
   703  00001A                     LCD_SetFont@buffer:
   704                           	callstack 0
   705                           
   706                           ; 8 bytes @ 0x19
   707  00001A                     	ds	3
   708  00001D                     ??_LCD_Init:
   709                           
   710                           ; 1 bytes @ 0x1C
   711  00001D                     	ds	5
   712  000022                     LCD_SetFont@FONT:
   713                           	callstack 0
   714                           
   715                           ; 1 bytes @ 0x21
   716  000022                     	ds	1
   717  000023                     LCD_SetFont@char_data:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x22
   721  000023                     	ds	2
   722  000025                     LCD_SetFont@i:
   723                           	callstack 0
   724                           
   725                           ; 1 bytes @ 0x24
   726  000025                     	ds	5
   727  00002A                     LCD_Init@cmd:
   728                           	callstack 0
   729                           
   730                           ; 1 bytes @ 0x29
   731  00002A                     	ds	1
   732  00002B                     ??_main:
   733                           
   734                           ; 1 bytes @ 0x2A
   735  00002B                     	ds	2
   736                           
   737 ;;
   738 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   739 ;;
   740 ;; *************** function _main *****************
   741 ;; Defined at:
   742 ;;		line 61 in file "main.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;		None
   745 ;; Auto vars:     Size  Location     Type
   746 ;;		None
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   756 ;;      Params:         0       0       0       0       0       0       0
   757 ;;      Locals:         0       0       0       0       0       0       0
   758 ;;      Temps:          2       0       0       0       0       0       0
   759 ;;      Totals:         2       0       0       0       0       0       0
   760 ;;Total ram usage:        2 bytes
   761 ;; Hardware stack levels required when called: 6
   762 ;; This function calls:
   763 ;;		_LCD_Command
   764 ;;		_LCD_DrawBigDigit
   765 ;;		_LCD_Init
   766 ;;		_LCD_SetFont
   767 ;;		_LCD_puts
   768 ;;		_MCU_Init
   769 ;; This function is called by:
   770 ;;		Startup code after reset
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           	psect	text0
   775  000AAC                     __ptext0:
   776                           	callstack 0
   777  000AAC                     _main:
   778                           	callstack 25
   779  000AAC                     
   780                           ;main.c: 62:     MCU_Init();
   781  000AAC  EC89  F008         	call	_MCU_Init	;wreg free
   782  000AB0                     
   783                           ;main.c: 64:     if (!LCD_Init(LCD)){ }
   784  000AB0  EE20  F03D         	lfsr	2,_LCD
   785  000AB4  EE00  F013         	lfsr	0,LCD_Init@display
   786  000AB8  0E09               	movlw	9
   787  000ABA                     u921:
   788  000ABA  CFDB FFEB          	movff	plusw2,plusw0
   789  000ABE  06E8               	decf	wreg,f,c
   790  000AC0  E2FC               	bc	u921
   791  000AC2  EC6F  F004         	call	_LCD_Init	;wreg free
   792  000AC6                     
   793                           ;main.c: 66:     LCD_Command (0x01);;
   794  000AC6  0E01               	movlw	1
   795  000AC8  EC3B  F008         	call	_LCD_Command
   796  000ACC  0E80               	movlw	128
   797  000ACE  EC3B  F008         	call	_LCD_Command
   798  000AD2                     
   799                           ;main.c: 68:     LCD_puts("MrChunckuee!!");
   800  000AD2  0EE3               	movlw	low STR_1
   801  000AD4  6E12               	movwf	LCD_puts@a^0,c
   802  000AD6  0E06               	movlw	high STR_1
   803  000AD8  6E13               	movwf	(LCD_puts@a+1)^0,c
   804  000ADA  ECC4  F007         	call	_LCD_puts	;wreg free
   805  000ADE  0EC4               	movlw	196
   806  000AE0  EC3B  F008         	call	_LCD_Command
   807  000AE4                     
   808                           ;main.c: 70:     LCD_puts("BIG Digits test");
   809  000AE4  0ED3               	movlw	low STR_2
   810  000AE6  6E12               	movwf	LCD_puts@a^0,c
   811  000AE8  0E06               	movlw	high STR_2
   812  000AEA  6E13               	movwf	(LCD_puts@a+1)^0,c
   813  000AEC  ECC4  F007         	call	_LCD_puts	;wreg free
   814  000AF0  0E95               	movlw	149
   815  000AF2  EC3B  F008         	call	_LCD_Command
   816  000AF6                     
   817                           ;main.c: 72:     LCD_puts("mrchunckuee.blog-");
   818  000AF6  0EC1               	movlw	low STR_3
   819  000AF8  6E12               	movwf	LCD_puts@a^0,c
   820  000AFA  0E06               	movlw	high STR_3
   821  000AFC  6E13               	movwf	(LCD_puts@a+1)^0,c
   822  000AFE  ECC4  F007         	call	_LCD_puts	;wreg free
   823  000B02  0EDF               	movlw	223
   824  000B04  EC3B  F008         	call	_LCD_Command
   825  000B08                     
   826                           ;main.c: 74:     LCD_puts("spot.com");
   827  000B08  0EF1               	movlw	low STR_4
   828  000B0A  6E12               	movwf	LCD_puts@a^0,c
   829  000B0C  0E06               	movlw	high STR_4
   830  000B0E  6E13               	movwf	(LCD_puts@a+1)^0,c
   831  000B10  ECC4  F007         	call	_LCD_puts	;wreg free
   832  000B14                     
   833                           ;main.c: 75:     _delay((unsigned long)((1000)*(16000000/4000.0)));
   834  000B14  0E15               	movlw	21
   835  000B16  6E2C               	movwf	(??_main+1)^0,c
   836  000B18  0E4B               	movlw	75
   837  000B1A  6E2B               	movwf	??_main^0,c
   838  000B1C  0EBE               	movlw	190
   839  000B1E                     u967:
   840  000B1E  2EE8               	decfsz	wreg,f,c
   841  000B20  D7FE               	bra	u967
   842  000B22  2E2B               	decfsz	??_main^0,f,c
   843  000B24  D7FC               	bra	u967
   844  000B26  2E2C               	decfsz	(??_main+1)^0,f,c
   845  000B28  D7FA               	bra	u967
   846  000B2A  D000               	nop2	
   847  000B2C                     l1530:
   848                           
   849                           ;main.c: 78:         if(LCDUpdate){
   850  000B2C  503B               	movf	_LCDUpdate^0,w,c
   851  000B2E  B4D8               	btfsc	status,2,c
   852  000B30  EF9C  F005         	goto	u931
   853  000B34  EF9E  F005         	goto	u930
   854  000B38                     u931:
   855  000B38  EF96  F005         	goto	l1530
   856  000B3C                     u930:
   857  000B3C                     
   858                           ;main.c: 79:             counter++;
   859  000B3C  2A3C               	incf	_counter^0,f,c
   860  000B3E                     
   861                           ;main.c: 80:             if(counter>3) counter = 1;
   862  000B3E  0E03               	movlw	3
   863  000B40  643C               	cpfsgt	_counter^0,c
   864  000B42  EFA5  F005         	goto	u941
   865  000B46  EFA7  F005         	goto	u940
   866  000B4A                     u941:
   867  000B4A  EFA9  F005         	goto	l1538
   868  000B4E                     u940:
   869  000B4E  0E01               	movlw	1
   870  000B50  6E3C               	movwf	_counter^0,c
   871  000B52                     l1538:
   872                           
   873                           ;main.c: 81:             LCD_Command (0x01);;
   874  000B52  0E01               	movlw	1
   875  000B54  EC3B  F008         	call	_LCD_Command
   876                           
   877                           ;main.c: 82:             switch(counter){
   878  000B58  EFBD  F005         	goto	l1548
   879  000B5C                     l1540:
   880                           
   881                           ;main.c: 84:                     LCD_SetFont(FONT_TRON_BOLD);
   882  000B5C  0E00               	movlw	0
   883  000B5E  ECC4  F006         	call	_LCD_SetFont
   884                           
   885                           ;main.c: 85:                     break;
   886  000B62  EFD6  F005         	goto	l1550
   887  000B66                     l1542:
   888                           
   889                           ;main.c: 87:                     LCD_SetFont(FONT_SQUARE_FOUR);
   890  000B66  0E01               	movlw	1
   891  000B68  ECC4  F006         	call	_LCD_SetFont
   892                           
   893                           ;main.c: 88:                     break;
   894  000B6C  EFD6  F005         	goto	l1550
   895  000B70                     l1544:
   896                           
   897                           ;main.c: 90:                     LCD_SetFont(FONT_BLOCKS);
   898  000B70  0E02               	movlw	2
   899  000B72  ECC4  F006         	call	_LCD_SetFont
   900                           
   901                           ;main.c: 91:                     break;
   902  000B76  EFD6  F005         	goto	l1550
   903  000B7A                     l1548:
   904  000B7A  503C               	movf	_counter^0,w,c
   905  000B7C  6E2B               	movwf	??_main^0,c
   906  000B7E  6A2C               	clrf	(??_main+1)^0,c
   907                           
   908                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   909                           ; Switch size 1, requested type "simple"
   910                           ; Number of cases is 1, Range of values is 0 to 0
   911                           ; switch strategies available:
   912                           ; Name         Instructions Cycles
   913                           ; simple_byte            4     3 (average)
   914                           ;	Chosen strategy is simple_byte
   915  000B80  502C               	movf	(??_main+1)^0,w,c
   916  000B82  0A00               	xorlw	0	; case 0
   917  000B84  B4D8               	btfsc	status,2,c
   918  000B86  EFC7  F005         	goto	l1606
   919  000B8A  EFD6  F005         	goto	l1550
   920  000B8E                     l1606:
   921                           
   922                           ; Switch size 1, requested type "simple"
   923                           ; Number of cases is 3, Range of values is 1 to 3
   924                           ; switch strategies available:
   925                           ; Name         Instructions Cycles
   926                           ; simple_byte           10     6 (average)
   927                           ;	Chosen strategy is simple_byte
   928  000B8E  502B               	movf	??_main^0,w,c
   929  000B90  0A01               	xorlw	1	; case 1
   930  000B92  B4D8               	btfsc	status,2,c
   931  000B94  EFAE  F005         	goto	l1540
   932  000B98  0A03               	xorlw	3	; case 2
   933  000B9A  B4D8               	btfsc	status,2,c
   934  000B9C  EFB3  F005         	goto	l1542
   935  000BA0  0A01               	xorlw	1	; case 3
   936  000BA2  B4D8               	btfsc	status,2,c
   937  000BA4  EFB8  F005         	goto	l1544
   938  000BA8  EFD6  F005         	goto	l1550
   939  000BAC                     l1550:
   940                           
   941                           ;main.c: 96:             LCD_DrawBigDigit(0, 0, 1);
   942  000BAC  0E00               	movlw	0
   943  000BAE  6E13               	movwf	LCD_DrawBigDigit@xpos^0,c
   944  000BB0  0E01               	movlw	1
   945  000BB2  6E14               	movwf	LCD_DrawBigDigit@ypos^0,c
   946  000BB4  0E00               	movlw	0
   947  000BB6  EC7E  F003         	call	_LCD_DrawBigDigit
   948                           
   949                           ;main.c: 97:             LCD_DrawBigDigit(1, 0, 4);
   950  000BBA  0E00               	movlw	0
   951  000BBC  6E13               	movwf	LCD_DrawBigDigit@xpos^0,c
   952  000BBE  0E04               	movlw	4
   953  000BC0  6E14               	movwf	LCD_DrawBigDigit@ypos^0,c
   954  000BC2  0E01               	movlw	1
   955  000BC4  EC7E  F003         	call	_LCD_DrawBigDigit
   956                           
   957                           ;main.c: 98:             LCD_DrawBigDigit(2, 0, 7);
   958  000BC8  0E00               	movlw	0
   959  000BCA  6E13               	movwf	LCD_DrawBigDigit@xpos^0,c
   960  000BCC  0E07               	movlw	7
   961  000BCE  6E14               	movwf	LCD_DrawBigDigit@ypos^0,c
   962  000BD0  0E02               	movlw	2
   963  000BD2  EC7E  F003         	call	_LCD_DrawBigDigit
   964                           
   965                           ;main.c: 99:             LCD_DrawBigDigit(3, 0, 10);
   966  000BD6  0E00               	movlw	0
   967  000BD8  6E13               	movwf	LCD_DrawBigDigit@xpos^0,c
   968  000BDA  0E0A               	movlw	10
   969  000BDC  6E14               	movwf	LCD_DrawBigDigit@ypos^0,c
   970  000BDE  0E03               	movlw	3
   971  000BE0  EC7E  F003         	call	_LCD_DrawBigDigit
   972                           
   973                           ;main.c: 100:             LCD_DrawBigDigit(4, 0, 13);
   974  000BE4  0E00               	movlw	0
   975  000BE6  6E13               	movwf	LCD_DrawBigDigit@xpos^0,c
   976  000BE8  0E0D               	movlw	13
   977  000BEA  6E14               	movwf	LCD_DrawBigDigit@ypos^0,c
   978  000BEC  0E04               	movlw	4
   979  000BEE  EC7E  F003         	call	_LCD_DrawBigDigit
   980                           
   981                           ;main.c: 101:             LCD_DrawBigDigit(5, 2, 5);
   982  000BF2  0E02               	movlw	2
   983  000BF4  6E13               	movwf	LCD_DrawBigDigit@xpos^0,c
   984  000BF6  0E05               	movlw	5
   985  000BF8  6E14               	movwf	LCD_DrawBigDigit@ypos^0,c
   986  000BFA  0E05               	movlw	5
   987  000BFC  EC7E  F003         	call	_LCD_DrawBigDigit
   988                           
   989                           ;main.c: 102:             LCD_DrawBigDigit(6, 2, 8);
   990  000C00  0E02               	movlw	2
   991  000C02  6E13               	movwf	LCD_DrawBigDigit@xpos^0,c
   992  000C04  0E08               	movlw	8
   993  000C06  6E14               	movwf	LCD_DrawBigDigit@ypos^0,c
   994  000C08  0E06               	movlw	6
   995  000C0A  EC7E  F003         	call	_LCD_DrawBigDigit
   996                           
   997                           ;main.c: 103:             LCD_DrawBigDigit(7, 2, 11);
   998  000C0E  0E02               	movlw	2
   999  000C10  6E13               	movwf	LCD_DrawBigDigit@xpos^0,c
  1000  000C12  0E0B               	movlw	11
  1001  000C14  6E14               	movwf	LCD_DrawBigDigit@ypos^0,c
  1002  000C16  0E07               	movlw	7
  1003  000C18  EC7E  F003         	call	_LCD_DrawBigDigit
  1004                           
  1005                           ;main.c: 104:             LCD_DrawBigDigit(8, 2, 14);
  1006  000C1C  0E02               	movlw	2
  1007  000C1E  6E13               	movwf	LCD_DrawBigDigit@xpos^0,c
  1008  000C20  0E0E               	movlw	14
  1009  000C22  6E14               	movwf	LCD_DrawBigDigit@ypos^0,c
  1010  000C24  0E08               	movlw	8
  1011  000C26  EC7E  F003         	call	_LCD_DrawBigDigit
  1012                           
  1013                           ;main.c: 105:             LCD_DrawBigDigit(9, 2, 17);
  1014  000C2A  0E02               	movlw	2
  1015  000C2C  6E13               	movwf	LCD_DrawBigDigit@xpos^0,c
  1016  000C2E  0E11               	movlw	17
  1017  000C30  6E14               	movwf	LCD_DrawBigDigit@ypos^0,c
  1018  000C32  0E09               	movlw	9
  1019  000C34  EC7E  F003         	call	_LCD_DrawBigDigit
  1020  000C38                     
  1021                           ;main.c: 106:             LCDUpdate = 0;
  1022  000C38  0E00               	movlw	0
  1023  000C3A  6E3B               	movwf	_LCDUpdate^0,c
  1024  000C3C  EF96  F005         	goto	l1530
  1025  000C40  EF2D  F000         	goto	start
  1026  000C44                     __end_of_main:
  1027                           	callstack 0
  1028                           
  1029 ;; *************** function _MCU_Init *****************
  1030 ;; Defined at:
  1031 ;;		line 112 in file "main.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;		None
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1045 ;;      Params:         0       0       0       0       0       0       0
  1046 ;;      Locals:         0       0       0       0       0       0       0
  1047 ;;      Temps:          0       0       0       0       0       0       0
  1048 ;;      Totals:         0       0       0       0       0       0       0
  1049 ;;Total ram usage:        0 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; Hardware stack levels required when called: 2
  1052 ;; This function calls:
  1053 ;;		_RTCC_Init
  1054 ;; This function is called by:
  1055 ;;		_main
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text1
  1060  001112                     __ptext1:
  1061                           	callstack 0
  1062  001112                     _MCU_Init:
  1063                           	callstack 28
  1064  001112                     
  1065                           ;main.c: 113:     ANSELA = 0;
  1066  001112  0E00               	movlw	0
  1067  001114  010F               	movlb	15	; () banked
  1068  001116  6F38               	movwf	56,b	;volatile
  1069                           
  1070                           ;main.c: 114:     ANSELB = 0;
  1071  001118  0E00               	movlw	0
  1072  00111A  6F39               	movwf	57,b	;volatile
  1073                           
  1074                           ;main.c: 115:     ANSELC = 0;
  1075  00111C  0E00               	movlw	0
  1076  00111E  6F3A               	movwf	58,b	;volatile
  1077                           
  1078                           ;main.c: 117:     OSCCONbits.IRCF=0b111;
  1079  001120  0E70               	movlw	112
  1080  001122  12D3               	iorwf	211,f,c	;volatile
  1081  001124                     
  1082                           ; BSR set to: 15
  1083                           ;main.c: 118:     RTCC_Init();
  1084  001124  EC78  F008         	call	_RTCC_Init	;wreg free
  1085  001128  0012               	return		;funcret
  1086  00112A                     __end_of_MCU_Init:
  1087                           	callstack 0
  1088                           
  1089 ;; *************** function _RTCC_Init *****************
  1090 ;; Defined at:
  1091 ;;		line 121 in file "main.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;		None
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;		None
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		wreg, status,2
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1105 ;;      Params:         0       0       0       0       0       0       0
  1106 ;;      Locals:         0       0       0       0       0       0       0
  1107 ;;      Temps:          0       0       0       0       0       0       0
  1108 ;;      Totals:         0       0       0       0       0       0       0
  1109 ;;Total ram usage:        0 bytes
  1110 ;; Hardware stack levels used: 1
  1111 ;; Hardware stack levels required when called: 1
  1112 ;; This function calls:
  1113 ;;		Nothing
  1114 ;; This function is called by:
  1115 ;;		_MCU_Init
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           	psect	text2
  1120  0010F0                     __ptext2:
  1121                           	callstack 0
  1122  0010F0                     _RTCC_Init:
  1123                           	callstack 28
  1124  0010F0                     
  1125                           ;main.c: 123:     T0CONbits.TMR0ON = 1;
  1126  0010F0  8ED5               	bsf	213,7,c	;volatile
  1127                           
  1128                           ;main.c: 124:     T0CONbits.T08BIT = 0;
  1129  0010F2  9CD5               	bcf	213,6,c	;volatile
  1130                           
  1131                           ;main.c: 125:     T0CONbits.T0CS = 0;
  1132  0010F4  9AD5               	bcf	213,5,c	;volatile
  1133                           
  1134                           ;main.c: 126:     T0CONbits.T0SE = 0;
  1135  0010F6  98D5               	bcf	213,4,c	;volatile
  1136                           
  1137                           ;main.c: 127:     T0CONbits.PSA = 0;
  1138  0010F8  96D5               	bcf	213,3,c	;volatile
  1139  0010FA                     
  1140                           ;main.c: 128:     T0CONbits.T0PS = 0b000;
  1141  0010FA  0EF8               	movlw	-8
  1142  0010FC  16D5               	andwf	213,f,c	;volatile
  1143                           
  1144                           ;main.c: 129:     TMR0H = 0xF8;
  1145  0010FE  0EF8               	movlw	248
  1146  001100  6ED7               	movwf	215,c	;volatile
  1147                           
  1148                           ;main.c: 130:     TMR0L = 0x30;
  1149  001102  0E30               	movlw	48
  1150  001104  6ED6               	movwf	214,c	;volatile
  1151  001106                     
  1152                           ;main.c: 131:     INTCONbits.TMR0IF = 0;
  1153  001106  94F2               	bcf	242,2,c	;volatile
  1154  001108                     
  1155                           ;main.c: 132:     INTCONbits.TMR0IE = 1;
  1156  001108  8AF2               	bsf	242,5,c	;volatile
  1157  00110A                     
  1158                           ;main.c: 133:     INTCON2bits.TMR0IP = 1;
  1159  00110A  84F1               	bsf	241,2,c	;volatile
  1160  00110C                     
  1161                           ;main.c: 134:     RCONbits.IPEN = 1;
  1162  00110C  8ED0               	bsf	208,7,c	;volatile
  1163  00110E                     
  1164                           ;main.c: 135:     INTCONbits.GIEH = 1;
  1165  00110E  8EF2               	bsf	242,7,c	;volatile
  1166  001110  0012               	return		;funcret
  1167  001112                     __end_of_RTCC_Init:
  1168                           	callstack 0
  1169                           
  1170 ;; *************** function _LCD_puts *****************
  1171 ;; Defined at:
  1172 ;;		line 132 in file "LiquidCrystalDisplay.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  a               2   17[COMRAM] PTR unsigned char 
  1175 ;;		 -> STR_4(9), STR_3(18), STR_2(16), STR_1(14), 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  i               2   21[COMRAM] int 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1187 ;;      Params:         2       0       0       0       0       0       0
  1188 ;;      Locals:         2       0       0       0       0       0       0
  1189 ;;      Temps:          2       0       0       0       0       0       0
  1190 ;;      Totals:         6       0       0       0       0       0       0
  1191 ;;Total ram usage:        6 bytes
  1192 ;; Hardware stack levels used: 1
  1193 ;; Hardware stack levels required when called: 4
  1194 ;; This function calls:
  1195 ;;		_LCD_putc
  1196 ;; This function is called by:
  1197 ;;		_main
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text3
  1202  000F88                     __ptext3:
  1203                           	callstack 0
  1204  000F88                     _LCD_puts:
  1205                           	callstack 26
  1206  000F88                     
  1207                           ;LiquidCrystalDisplay.c: 133:     for(int i = 0; a[i] != '\0'; ++i){
  1208  000F88  0E00               	movlw	0
  1209  000F8A  6E17               	movwf	(LCD_puts@i+1)^0,c
  1210  000F8C  0E00               	movlw	0
  1211  000F8E  6E16               	movwf	LCD_puts@i^0,c
  1212  000F90  EFDA  F007         	goto	l1482
  1213  000F94                     l1478:
  1214                           
  1215                           ;LiquidCrystalDisplay.c: 134:         LCD_putc(a[i]);
  1216  000F94  5016               	movf	LCD_puts@i^0,w,c
  1217  000F96  2412               	addwf	LCD_puts@a^0,w,c
  1218  000F98  6E14               	movwf	??_LCD_puts^0,c
  1219  000F9A  5017               	movf	(LCD_puts@i+1)^0,w,c
  1220  000F9C  2013               	addwfc	(LCD_puts@a+1)^0,w,c
  1221  000F9E  6E15               	movwf	(??_LCD_puts+1)^0,c
  1222  000FA0  C014  FFF6         	movff	??_LCD_puts,tblptrl
  1223  000FA4  C015  FFF7         	movff	??_LCD_puts+1,tblptrh
  1224  000FA8                     	if	0	;tblptru may be non-zero
  1225  000FA8                     	endif
  1226  000FA8                     	if	0	;tblptru may be non-zero
  1227  000FA8                     	endif
  1228  000FA8  0008               	tblrd		*
  1229  000FAA  50F5               	movf	tablat,w,c
  1230  000FAC  EC5B  F008         	call	_LCD_putc
  1231  000FB0                     
  1232                           ;LiquidCrystalDisplay.c: 135:     }
  1233  000FB0  4A16               	infsnz	LCD_puts@i^0,f,c
  1234  000FB2  2A17               	incf	(LCD_puts@i+1)^0,f,c
  1235  000FB4                     l1482:
  1236  000FB4  5016               	movf	LCD_puts@i^0,w,c
  1237  000FB6  2412               	addwf	LCD_puts@a^0,w,c
  1238  000FB8  6E14               	movwf	??_LCD_puts^0,c
  1239  000FBA  5017               	movf	(LCD_puts@i+1)^0,w,c
  1240  000FBC  2013               	addwfc	(LCD_puts@a+1)^0,w,c
  1241  000FBE  6E15               	movwf	(??_LCD_puts+1)^0,c
  1242  000FC0  C014  FFF6         	movff	??_LCD_puts,tblptrl
  1243  000FC4  C015  FFF7         	movff	??_LCD_puts+1,tblptrh
  1244  000FC8                     	if	0	;tblptru may be non-zero
  1245  000FC8                     	endif
  1246  000FC8                     	if	0	;tblptru may be non-zero
  1247  000FC8                     	endif
  1248  000FC8  0008               	tblrd		*
  1249  000FCA  50F5               	movf	tablat,w,c
  1250  000FCC  0900               	iorlw	0
  1251  000FCE  A4D8               	btfss	status,2,c
  1252  000FD0  EFEC  F007         	goto	u911
  1253  000FD4  EFEE  F007         	goto	u910
  1254  000FD8                     u911:
  1255  000FD8  EFCA  F007         	goto	l1478
  1256  000FDC                     u910:
  1257  000FDC  0012               	return		;funcret
  1258  000FDE                     __end_of_LCD_puts:
  1259                           	callstack 0
  1260                           
  1261 ;; *************** function _LCD_SetFont *****************
  1262 ;; Defined at:
  1263 ;;		line 109 in file "LCD_BIGDigits.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  FONT            1    wreg     enum E5939
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;  FONT            1   33[COMRAM] enum E5939
  1268 ;;  buffer          8   25[COMRAM] unsigned char [8]
  1269 ;;  char_data       2   34[COMRAM] PTR const unsigned char 
  1270 ;;		 -> blocks_chars(64), square_four_chars(64), tron_bold_chars(64), 
  1271 ;;  i               1   36[COMRAM] unsigned char 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1281 ;;      Params:         0       0       0       0       0       0       0
  1282 ;;      Locals:        12       0       0       0       0       0       0
  1283 ;;      Temps:          2       0       0       0       0       0       0
  1284 ;;      Totals:        14       0       0       0       0       0       0
  1285 ;;Total ram usage:       14 bytes
  1286 ;; Hardware stack levels used: 1
  1287 ;; Hardware stack levels required when called: 5
  1288 ;; This function calls:
  1289 ;;		_LCD_createChar
  1290 ;;		_memcpy
  1291 ;; This function is called by:
  1292 ;;		_main
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           	psect	text4
  1297  000D88                     __ptext4:
  1298                           	callstack 0
  1299  000D88                     _LCD_SetFont:
  1300                           	callstack 25
  1301                           
  1302                           ;incstack = 0
  1303                           ;LCD_SetFont@FONT stored from wreg
  1304  000D88  6E22               	movwf	LCD_SetFont@FONT^0,c
  1305  000D8A                     
  1306                           ;LCD_BIGDigits.c: 110:     uint8_t i;;LCD_BIGDigits.c: 111:     uint8_t buffer[8];;LCD_B
      +                          IGDigits.c: 112:     const uint8_t (*char_data)[8];;LCD_BIGDigits.c: 114:     switch(FON
      +                          T) {
  1307  000D8A  EFE5  F006         	goto	l1354
  1308  000D8E                     l1346:
  1309                           
  1310                           ;LCD_BIGDigits.c: 116:             char_data = tron_bold_chars;
  1311  000D8E  0E81               	movlw	low _tron_bold_chars
  1312  000D90  6E23               	movwf	LCD_SetFont@char_data^0,c
  1313  000D92  0E06               	movlw	high _tron_bold_chars
  1314  000D94  6E24               	movwf	(LCD_SetFont@char_data+1)^0,c
  1315                           
  1316                           ;LCD_BIGDigits.c: 117:             current_digits = tron_bold_digits;
  1317  000D96  0EB0               	movlw	low _tron_bold_digits
  1318  000D98  6E39               	movwf	_current_digits^0,c
  1319  000D9A  0E00               	movlw	high _tron_bold_digits
  1320  000D9C  6E3A               	movwf	(_current_digits+1)^0,c
  1321                           
  1322                           ;LCD_BIGDigits.c: 118:             break;
  1323  000D9E  EFFE  F006         	goto	l1356
  1324  000DA2                     l1348:
  1325                           
  1326                           ;LCD_BIGDigits.c: 120:             char_data = square_four_chars;
  1327  000DA2  0E41               	movlw	low _square_four_chars
  1328  000DA4  6E23               	movwf	LCD_SetFont@char_data^0,c
  1329  000DA6  0E06               	movlw	high _square_four_chars
  1330  000DA8  6E24               	movwf	(LCD_SetFont@char_data+1)^0,c
  1331                           
  1332                           ;LCD_BIGDigits.c: 121:             current_digits = square_four_digits;
  1333  000DAA  0E88               	movlw	low _square_four_digits
  1334  000DAC  6E39               	movwf	_current_digits^0,c
  1335  000DAE  0E00               	movlw	high _square_four_digits
  1336  000DB0  6E3A               	movwf	(_current_digits+1)^0,c
  1337                           
  1338                           ;LCD_BIGDigits.c: 122:             break;
  1339  000DB2  EFFE  F006         	goto	l1356
  1340  000DB6                     l1350:
  1341                           
  1342                           ;LCD_BIGDigits.c: 124:             char_data = blocks_chars;
  1343  000DB6  0E01               	movlw	low _blocks_chars
  1344  000DB8  6E23               	movwf	LCD_SetFont@char_data^0,c
  1345  000DBA  0E06               	movlw	high _blocks_chars
  1346  000DBC  6E24               	movwf	(LCD_SetFont@char_data+1)^0,c
  1347                           
  1348                           ;LCD_BIGDigits.c: 125:             current_digits = blocks_digits;
  1349  000DBE  0E60               	movlw	low _blocks_digits
  1350  000DC0  6E39               	movwf	_current_digits^0,c
  1351  000DC2  0E00               	movlw	high _blocks_digits
  1352  000DC4  6E3A               	movwf	(_current_digits+1)^0,c
  1353                           
  1354                           ;LCD_BIGDigits.c: 126:             break;
  1355  000DC6  EFFE  F006         	goto	l1356
  1356  000DCA                     l1354:
  1357  000DCA  5022               	movf	LCD_SetFont@FONT^0,w,c
  1358  000DCC  6E18               	movwf	??_LCD_SetFont^0,c
  1359  000DCE  6A19               	clrf	(??_LCD_SetFont+1)^0,c
  1360                           
  1361                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1362                           ; Switch size 1, requested type "simple"
  1363                           ; Number of cases is 1, Range of values is 0 to 0
  1364                           ; switch strategies available:
  1365                           ; Name         Instructions Cycles
  1366                           ; simple_byte            4     3 (average)
  1367                           ;	Chosen strategy is simple_byte
  1368  000DD0  5019               	movf	(??_LCD_SetFont+1)^0,w,c
  1369  000DD2  0A00               	xorlw	0	; case 0
  1370  000DD4  B4D8               	btfsc	status,2,c
  1371  000DD6  EFEF  F006         	goto	l1608
  1372  000DDA  EF26  F007         	goto	l31
  1373  000DDE                     l1608:
  1374                           
  1375                           ; Switch size 1, requested type "simple"
  1376                           ; Number of cases is 3, Range of values is 0 to 2
  1377                           ; switch strategies available:
  1378                           ; Name         Instructions Cycles
  1379                           ; simple_byte           10     6 (average)
  1380                           ;	Chosen strategy is simple_byte
  1381  000DDE  5018               	movf	??_LCD_SetFont^0,w,c
  1382  000DE0  0A00               	xorlw	0	; case 0
  1383  000DE2  B4D8               	btfsc	status,2,c
  1384  000DE4  EFC7  F006         	goto	l1346
  1385  000DE8  0A01               	xorlw	1	; case 1
  1386  000DEA  B4D8               	btfsc	status,2,c
  1387  000DEC  EFD1  F006         	goto	l1348
  1388  000DF0  0A03               	xorlw	3	; case 2
  1389  000DF2  B4D8               	btfsc	status,2,c
  1390  000DF4  EFDB  F006         	goto	l1350
  1391  000DF8  EF26  F007         	goto	l31
  1392  000DFC                     l1356:
  1393                           
  1394                           ;LCD_BIGDigits.c: 132:     for (i = 0; i < 8; i++) {
  1395  000DFC  0E00               	movlw	0
  1396  000DFE  6E25               	movwf	LCD_SetFont@i^0,c
  1397  000E00                     l1362:
  1398                           
  1399                           ;LCD_BIGDigits.c: 133:         memcpy(buffer, char_data[i], 8);
  1400  000E00  0E1A               	movlw	low LCD_SetFont@buffer
  1401  000E02  6E01               	movwf	memcpy@d1^0,c
  1402  000E04  0E00               	movlw	high LCD_SetFont@buffer
  1403  000E06  6E02               	movwf	(memcpy@d1+1)^0,c
  1404  000E08  5025               	movf	LCD_SetFont@i^0,w,c
  1405  000E0A  0D08               	mullw	8
  1406  000E0C  CFF3 F018          	movff	prodl,??_LCD_SetFont
  1407  000E10  CFF4 F019          	movff	prodh,??_LCD_SetFont+1
  1408  000E14  5018               	movf	??_LCD_SetFont^0,w,c
  1409  000E16  2423               	addwf	LCD_SetFont@char_data^0,w,c
  1410  000E18  6E03               	movwf	memcpy@s1^0,c
  1411  000E1A  5019               	movf	(??_LCD_SetFont+1)^0,w,c
  1412  000E1C  2024               	addwfc	(LCD_SetFont@char_data+1)^0,w,c
  1413  000E1E  6E04               	movwf	(memcpy@s1+1)^0,c
  1414  000E20  0E00               	movlw	0
  1415  000E22  6E06               	movwf	(memcpy@n+1)^0,c
  1416  000E24  0E08               	movlw	8
  1417  000E26  6E05               	movwf	memcpy@n^0,c
  1418  000E28  ECEF  F007         	call	_memcpy	;wreg free
  1419  000E2C                     
  1420                           ;LCD_BIGDigits.c: 134:         LCD_createChar(i, buffer);
  1421  000E2C  0E1A               	movlw	low LCD_SetFont@buffer
  1422  000E2E  6E13               	movwf	LCD_createChar@charmap^0,c
  1423  000E30  0E00               	movlw	high LCD_SetFont@buffer
  1424  000E32  6E14               	movwf	(LCD_createChar@charmap+1)^0,c
  1425  000E34  5025               	movf	LCD_SetFont@i^0,w,c
  1426  000E36  EC18  F008         	call	_LCD_createChar
  1427  000E3A                     
  1428                           ;LCD_BIGDigits.c: 135:     }
  1429  000E3A  2A25               	incf	LCD_SetFont@i^0,f,c
  1430  000E3C  0E07               	movlw	7
  1431  000E3E  6425               	cpfsgt	LCD_SetFont@i^0,c
  1432  000E40  EF24  F007         	goto	u681
  1433  000E44  EF26  F007         	goto	u680
  1434  000E48                     u681:
  1435  000E48  EF00  F007         	goto	l1362
  1436  000E4C                     u680:
  1437  000E4C                     l31:
  1438  000E4C  0012               	return		;funcret
  1439  000E4E                     __end_of_LCD_SetFont:
  1440                           	callstack 0
  1441                           
  1442 ;; *************** function _memcpy *****************
  1443 ;; Defined at:
  1444 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memcpy.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;  d1              2    0[COMRAM] PTR void 
  1447 ;;		 -> LCD_SetFont@buffer(8), 
  1448 ;;  s1              2    2[COMRAM] PTR const void 
  1449 ;;		 -> blocks_chars(64), square_four_chars(64), tron_bold_chars(64), 
  1450 ;;  n               2    4[COMRAM] unsigned int 
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  s               2    8[COMRAM] PTR const unsigned char 
  1453 ;;		 -> blocks_chars(64), square_four_chars(64), tron_bold_chars(64), 
  1454 ;;  d               2    6[COMRAM] PTR unsigned char 
  1455 ;;		 -> LCD_SetFont@buffer(8), 
  1456 ;;  tmp             1   10[COMRAM] unsigned char 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  2    0[COMRAM] PTR void 
  1459 ;; Registers used:
  1460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1466 ;;      Params:         6       0       0       0       0       0       0
  1467 ;;      Locals:         5       0       0       0       0       0       0
  1468 ;;      Temps:          0       0       0       0       0       0       0
  1469 ;;      Totals:        11       0       0       0       0       0       0
  1470 ;;Total ram usage:       11 bytes
  1471 ;; Hardware stack levels used: 1
  1472 ;; Hardware stack levels required when called: 1
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		_LCD_SetFont
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           	psect	text5
  1481  000FDE                     __ptext5:
  1482                           	callstack 0
  1483  000FDE                     _memcpy:
  1484                           	callstack 28
  1485  000FDE  C003  F009         	movff	memcpy@s1,memcpy@s
  1486  000FE2  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  1487  000FE6  C001  F007         	movff	memcpy@d1,memcpy@d
  1488  000FEA  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  1489  000FEE  EF0A  F008         	goto	l1328
  1490  000FF2                     l1320:
  1491  000FF2  C009  FFF6         	movff	memcpy@s,tblptrl
  1492  000FF6  C00A  FFF7         	movff	memcpy@s+1,tblptrh
  1493  000FFA                     	if	0	;tblptru may be non-zero
  1494  000FFA                     	endif
  1495  000FFA                     	if	0	;tblptru may be non-zero
  1496  000FFA                     	endif
  1497  000FFA  0008               	tblrd		*
  1498  000FFC  CFF5 F00B          	movff	tablat,memcpy@tmp
  1499  001000  4A09               	infsnz	memcpy@s^0,f,c
  1500  001002  2A0A               	incf	(memcpy@s+1)^0,f,c
  1501  001004  C007  FFD9         	movff	memcpy@d,fsr2l
  1502  001008  C008  FFDA         	movff	memcpy@d+1,fsr2h
  1503  00100C  C00B  FFDF         	movff	memcpy@tmp,indf2
  1504  001010  4A07               	infsnz	memcpy@d^0,f,c
  1505  001012  2A08               	incf	(memcpy@d+1)^0,f,c
  1506  001014                     l1328:
  1507  001014  0605               	decf	memcpy@n^0,f,c
  1508  001016  A0D8               	btfss	status,0,c
  1509  001018  0606               	decf	(memcpy@n+1)^0,f,c
  1510  00101A  2805               	incf	memcpy@n^0,w,c
  1511  00101C  E106               	bnz	u661
  1512  00101E  2806               	incf	(memcpy@n+1)^0,w,c
  1513  001020  A4D8               	btfss	status,2,c
  1514  001022  EF15  F008         	goto	u661
  1515  001026  EF17  F008         	goto	u660
  1516  00102A                     u661:
  1517  00102A  EFF9  F007         	goto	l1320
  1518  00102E                     u660:
  1519  00102E  0012               	return		;funcret
  1520  001030                     __end_of_memcpy:
  1521                           	callstack 0
  1522                           
  1523 ;; *************** function _LCD_createChar *****************
  1524 ;; Defined at:
  1525 ;;		line 144 in file "LiquidCrystalDisplay.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  location        1    wreg     unsigned char 
  1528 ;;  charmap         2   18[COMRAM] PTR const unsigned char 
  1529 ;;		 -> LCD_SetFont@buffer(8), 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  location        1   21[COMRAM] unsigned char 
  1532 ;;  i               1   22[COMRAM] unsigned char 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1542 ;;      Params:         2       0       0       0       0       0       0
  1543 ;;      Locals:         2       0       0       0       0       0       0
  1544 ;;      Temps:          1       0       0       0       0       0       0
  1545 ;;      Totals:         5       0       0       0       0       0       0
  1546 ;;Total ram usage:        5 bytes
  1547 ;; Hardware stack levels used: 1
  1548 ;; Hardware stack levels required when called: 4
  1549 ;; This function calls:
  1550 ;;		_LCD_Command
  1551 ;;		_LCD_putc
  1552 ;; This function is called by:
  1553 ;;		_LCD_SetFont
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text6
  1558  001030                     __ptext6:
  1559                           	callstack 0
  1560  001030                     _LCD_createChar:
  1561                           	callstack 25
  1562                           
  1563                           ;incstack = 0
  1564                           ;LCD_createChar@location stored from wreg
  1565  001030  6E16               	movwf	LCD_createChar@location^0,c
  1566  001032                     
  1567                           ;LiquidCrystalDisplay.c: 146:     LCD_Command (0x40 | ((location & 0x07) << 3));
  1568  001032  C016  F015         	movff	LCD_createChar@location,??_LCD_createChar
  1569  001036  0E07               	movlw	7
  1570  001038  1615               	andwf	??_LCD_createChar^0,f,c
  1571  00103A  90D8               	bcf	status,0,c
  1572  00103C  3615               	rlcf	??_LCD_createChar^0,f,c
  1573  00103E  90D8               	bcf	status,0,c
  1574  001040  3615               	rlcf	??_LCD_createChar^0,f,c
  1575  001042  90D8               	bcf	status,0,c
  1576  001044  3415               	rlcf	??_LCD_createChar^0,w,c
  1577  001046  0940               	iorlw	64
  1578  001048  EC3B  F008         	call	_LCD_Command
  1579  00104C                     
  1580                           ;LiquidCrystalDisplay.c: 149:     for(uint8_t i = 0; i < 8; i++){
  1581  00104C  0E00               	movlw	0
  1582  00104E  6E17               	movwf	LCD_createChar@i^0,c
  1583  001050                     l1338:
  1584                           
  1585                           ;LiquidCrystalDisplay.c: 150:         LCD_putc(charmap[i]);
  1586  001050  5017               	movf	LCD_createChar@i^0,w,c
  1587  001052  2413               	addwf	LCD_createChar@charmap^0,w,c
  1588  001054  6ED9               	movwf	fsr2l,c
  1589  001056  0E00               	movlw	0
  1590  001058  2014               	addwfc	(LCD_createChar@charmap+1)^0,w,c
  1591  00105A  6EDA               	movwf	fsr2h,c
  1592  00105C  50DF               	movf	indf2,w,c
  1593  00105E  EC5B  F008         	call	_LCD_putc
  1594  001062                     
  1595                           ;LiquidCrystalDisplay.c: 151:     }
  1596  001062  2A17               	incf	LCD_createChar@i^0,f,c
  1597  001064  0E07               	movlw	7
  1598  001066  6417               	cpfsgt	LCD_createChar@i^0,c
  1599  001068  EF38  F008         	goto	u671
  1600  00106C  EF3A  F008         	goto	u670
  1601  001070                     u671:
  1602  001070  EF28  F008         	goto	l1338
  1603  001074                     u670:
  1604  001074  0012               	return		;funcret
  1605  001076                     __end_of_LCD_createChar:
  1606                           	callstack 0
  1607                           
  1608 ;; *************** function _LCD_Init *****************
  1609 ;; Defined at:
  1610 ;;		line 56 in file "LiquidCrystalDisplay.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;  display        10   18[COMRAM] struct .
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  cmd             1   41[COMRAM] unsigned char 
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      _Bool 
  1617 ;; Registers used:
  1618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1624 ;;      Params:        10       0       0       0       0       0       0
  1625 ;;      Locals:         1       0       0       0       0       0       0
  1626 ;;      Temps:         13       0       0       0       0       0       0
  1627 ;;      Totals:        24       0       0       0       0       0       0
  1628 ;;Total ram usage:       24 bytes
  1629 ;; Hardware stack levels used: 1
  1630 ;; Hardware stack levels required when called: 4
  1631 ;; This function calls:
  1632 ;;		_LCD_Command
  1633 ;;		_LCD_Write
  1634 ;; This function is called by:
  1635 ;;		_main
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text7
  1640  0008DE                     __ptext7:
  1641                           	callstack 0
  1642  0008DE                     _LCD_Init:
  1643                           	callstack 26
  1644  0008DE                     
  1645                           ;LiquidCrystalDisplay.c: 57:     LCDisplay = display;
  1646  0008DE  EE20  F013         	lfsr	2,LCD_Init@display
  1647  0008E2  EE10  F02D         	lfsr	1,_LCDisplay
  1648  0008E6  0E09               	movlw	9
  1649  0008E8                     u791:
  1650  0008E8  CFDB FFE3          	movff	plusw2,plusw1
  1651  0008EC  06E8               	decf	wreg,f,c
  1652  0008EE  E2FC               	bc	u791
  1653  0008F0                     
  1654                           ;LiquidCrystalDisplay.c: 59:     if (LCDisplay.TRIS != ((void*)0)) {
  1655  0008F0  502D               	movf	_LCDisplay^0,w,c
  1656  0008F2  102E               	iorwf	(_LCDisplay+1)^0,w,c
  1657  0008F4  B4D8               	btfsc	status,2,c
  1658  0008F6  EF7F  F004         	goto	u801
  1659  0008FA  EF81  F004         	goto	u800
  1660  0008FE                     u801:
  1661  0008FE  EFD9  F004         	goto	l1424
  1662  000902                     u800:
  1663  000902                     
  1664                           ;LiquidCrystalDisplay.c: 61:         *(LCDisplay.TRIS) &= ~((1 << LCDisplay.RS) | (1 << 
      +                          LCDisplay.EN) | (1 << LCDisplay.D4) | (1 << LCDisplay.D5) | (1 << LCDisplay.D6) | (1 << 
      +                          LCDisplay.D7));
  1665  000902  C036  F01D         	movff	_LCDisplay+9,??_LCD_Init
  1666  000906  0E01               	movlw	1
  1667  000908  6E1E               	movwf	(??_LCD_Init+1)^0,c
  1668  00090A  2A1D               	incf	??_LCD_Init^0,f,c
  1669  00090C  EF8A  F004         	goto	u814
  1670  000910                     u815:
  1671  000910  90D8               	bcf	status,0,c
  1672  000912  361E               	rlcf	(??_LCD_Init+1)^0,f,c
  1673  000914                     u814:
  1674  000914  2E1D               	decfsz	??_LCD_Init^0,f,c
  1675  000916  EF88  F004         	goto	u815
  1676  00091A  C035  F01F         	movff	_LCDisplay+8,??_LCD_Init+2
  1677  00091E  0E01               	movlw	1
  1678  000920  6E20               	movwf	(??_LCD_Init+3)^0,c
  1679  000922  2A1F               	incf	(??_LCD_Init+2)^0,f,c
  1680  000924  EF96  F004         	goto	u824
  1681  000928                     u825:
  1682  000928  90D8               	bcf	status,0,c
  1683  00092A  3620               	rlcf	(??_LCD_Init+3)^0,f,c
  1684  00092C                     u824:
  1685  00092C  2E1F               	decfsz	(??_LCD_Init+2)^0,f,c
  1686  00092E  EF94  F004         	goto	u825
  1687  000932  C034  F021         	movff	_LCDisplay+7,??_LCD_Init+4
  1688  000936  0E01               	movlw	1
  1689  000938  6E22               	movwf	(??_LCD_Init+5)^0,c
  1690  00093A  2A21               	incf	(??_LCD_Init+4)^0,f,c
  1691  00093C  EFA2  F004         	goto	u834
  1692  000940                     u835:
  1693  000940  90D8               	bcf	status,0,c
  1694  000942  3622               	rlcf	(??_LCD_Init+5)^0,f,c
  1695  000944                     u834:
  1696  000944  2E21               	decfsz	(??_LCD_Init+4)^0,f,c
  1697  000946  EFA0  F004         	goto	u835
  1698  00094A  C033  F023         	movff	_LCDisplay+6,??_LCD_Init+6
  1699  00094E  0E01               	movlw	1
  1700  000950  6E24               	movwf	(??_LCD_Init+7)^0,c
  1701  000952  2A23               	incf	(??_LCD_Init+6)^0,f,c
  1702  000954  EFAE  F004         	goto	u844
  1703  000958                     u845:
  1704  000958  90D8               	bcf	status,0,c
  1705  00095A  3624               	rlcf	(??_LCD_Init+7)^0,f,c
  1706  00095C                     u844:
  1707  00095C  2E23               	decfsz	(??_LCD_Init+6)^0,f,c
  1708  00095E  EFAC  F004         	goto	u845
  1709  000962  C032  F025         	movff	_LCDisplay+5,??_LCD_Init+8
  1710  000966  0E01               	movlw	1
  1711  000968  6E26               	movwf	(??_LCD_Init+9)^0,c
  1712  00096A  2A25               	incf	(??_LCD_Init+8)^0,f,c
  1713  00096C  EFBA  F004         	goto	u854
  1714  000970                     u855:
  1715  000970  90D8               	bcf	status,0,c
  1716  000972  3626               	rlcf	(??_LCD_Init+9)^0,f,c
  1717  000974                     u854:
  1718  000974  2E25               	decfsz	(??_LCD_Init+8)^0,f,c
  1719  000976  EFB8  F004         	goto	u855
  1720  00097A  C031  F027         	movff	_LCDisplay+4,??_LCD_Init+10
  1721  00097E  0E01               	movlw	1
  1722  000980  6E28               	movwf	(??_LCD_Init+11)^0,c
  1723  000982  2A27               	incf	(??_LCD_Init+10)^0,f,c
  1724  000984  EFC6  F004         	goto	u864
  1725  000988                     u865:
  1726  000988  90D8               	bcf	status,0,c
  1727  00098A  3628               	rlcf	(??_LCD_Init+11)^0,f,c
  1728  00098C                     u864:
  1729  00098C  2E27               	decfsz	(??_LCD_Init+10)^0,f,c
  1730  00098E  EFC4  F004         	goto	u865
  1731  000992  5028               	movf	(??_LCD_Init+11)^0,w,c
  1732  000994  1026               	iorwf	(??_LCD_Init+9)^0,w,c
  1733  000996  1024               	iorwf	(??_LCD_Init+7)^0,w,c
  1734  000998  1022               	iorwf	(??_LCD_Init+5)^0,w,c
  1735  00099A  1020               	iorwf	(??_LCD_Init+3)^0,w,c
  1736  00099C  101E               	iorwf	(??_LCD_Init+1)^0,w,c
  1737  00099E  0AFF               	xorlw	255
  1738  0009A0  6E29               	movwf	(??_LCD_Init+12)^0,c
  1739  0009A2  C02D  FFD9         	movff	_LCDisplay,fsr2l
  1740  0009A6  C02E  FFDA         	movff	_LCDisplay+1,fsr2h
  1741  0009AA  5029               	movf	(??_LCD_Init+12)^0,w,c
  1742  0009AC  16DF               	andwf	indf2,f,c
  1743                           
  1744                           ;LiquidCrystalDisplay.c: 62:     } else {
  1745  0009AE  EF0C  F005         	goto	l1440
  1746  0009B2                     l1424:
  1747                           
  1748                           ;LiquidCrystalDisplay.c: 65:         if (LCDisplay.PORT == &PORTA) TRISA = 0x00;
  1749  0009B2  0E80               	movlw	128
  1750  0009B4  182F               	xorwf	(_LCDisplay+2)^0,w,c
  1751  0009B6  E107               	bnz	u871
  1752  0009B8  0E0F               	movlw	15
  1753  0009BA  1830               	xorwf	(_LCDisplay+3)^0,w,c
  1754  0009BC  A4D8               	btfss	status,2,c
  1755  0009BE  EFE3  F004         	goto	u871
  1756  0009C2  EFE5  F004         	goto	u870
  1757  0009C6                     u871:
  1758  0009C6  EFE9  F004         	goto	l1428
  1759  0009CA                     u870:
  1760  0009CA  0E00               	movlw	0
  1761  0009CC  6E92               	movwf	146,c	;volatile
  1762  0009CE  EF0C  F005         	goto	l1440
  1763  0009D2                     l1428:
  1764  0009D2  0E81               	movlw	129
  1765  0009D4  182F               	xorwf	(_LCDisplay+2)^0,w,c
  1766  0009D6  E107               	bnz	u881
  1767  0009D8  0E0F               	movlw	15
  1768  0009DA  1830               	xorwf	(_LCDisplay+3)^0,w,c
  1769  0009DC  A4D8               	btfss	status,2,c
  1770  0009DE  EFF3  F004         	goto	u881
  1771  0009E2  EFF5  F004         	goto	u880
  1772  0009E6                     u881:
  1773  0009E6  EFF9  F004         	goto	l1432
  1774  0009EA                     u880:
  1775  0009EA  0E00               	movlw	0
  1776  0009EC  6E93               	movwf	147,c	;volatile
  1777  0009EE  EF0C  F005         	goto	l1440
  1778  0009F2                     l1432:
  1779  0009F2  0E82               	movlw	130
  1780  0009F4  182F               	xorwf	(_LCDisplay+2)^0,w,c
  1781  0009F6  E107               	bnz	u891
  1782  0009F8  0E0F               	movlw	15
  1783  0009FA  1830               	xorwf	(_LCDisplay+3)^0,w,c
  1784  0009FC  A4D8               	btfss	status,2,c
  1785  0009FE  EF03  F005         	goto	u891
  1786  000A02  EF05  F005         	goto	u890
  1787  000A06                     u891:
  1788  000A06  EF09  F005         	goto	l1436
  1789  000A0A                     u890:
  1790  000A0A  0E00               	movlw	0
  1791  000A0C  6E94               	movwf	148,c	;volatile
  1792  000A0E  EF0C  F005         	goto	l1440
  1793  000A12                     l1436:
  1794  000A12  0E00               	movlw	0
  1795  000A14  EF55  F005         	goto	l202
  1796  000A18                     l1440:
  1797                           
  1798                           ;LiquidCrystalDisplay.c: 76:     _delay((unsigned long)((20)*(16000000/4000.0)));
  1799  000A18  0E68               	movlw	104
  1800  000A1A  6E1D               	movwf	??_LCD_Init^0,c
  1801  000A1C  0EE4               	movlw	228
  1802  000A1E                     u977:
  1803  000A1E  2EE8               	decfsz	wreg,f,c
  1804  000A20  D7FE               	bra	u977
  1805  000A22  2E1D               	decfsz	??_LCD_Init^0,f,c
  1806  000A24  D7FC               	bra	u977
  1807  000A26  D000               	nop2	
  1808  000A28                     
  1809                           ;LiquidCrystalDisplay.c: 79:     *(LCDisplay.PORT) &= ~(1 << LCDisplay.RS);
  1810  000A28  C031  F01D         	movff	_LCDisplay+4,??_LCD_Init
  1811  000A2C  0E01               	movlw	1
  1812  000A2E  6E1E               	movwf	(??_LCD_Init+1)^0,c
  1813  000A30  2A1D               	incf	??_LCD_Init^0,f,c
  1814  000A32  EF1D  F005         	goto	u904
  1815  000A36                     u905:
  1816  000A36  90D8               	bcf	status,0,c
  1817  000A38  361E               	rlcf	(??_LCD_Init+1)^0,f,c
  1818  000A3A                     u904:
  1819  000A3A  2E1D               	decfsz	??_LCD_Init^0,f,c
  1820  000A3C  EF1B  F005         	goto	u905
  1821  000A40  501E               	movf	(??_LCD_Init+1)^0,w,c
  1822  000A42  0AFF               	xorlw	255
  1823  000A44  6E1F               	movwf	(??_LCD_Init+2)^0,c
  1824  000A46  C02F  FFD9         	movff	_LCDisplay+2,fsr2l
  1825  000A4A  C030  FFDA         	movff	_LCDisplay+3,fsr2h
  1826  000A4E  501F               	movf	(??_LCD_Init+2)^0,w,c
  1827  000A50  16DF               	andwf	indf2,f,c
  1828  000A52                     
  1829                           ;LiquidCrystalDisplay.c: 80:     LCD_Write(0x03);
  1830  000A52  0E03               	movlw	3
  1831  000A54  EC63  F007         	call	_LCD_Write
  1832  000A58                     
  1833                           ;LiquidCrystalDisplay.c: 81:     _delay((unsigned long)((5)*(16000000/4000.0)));
  1834  000A58  0E1A               	movlw	26
  1835  000A5A  6E1D               	movwf	??_LCD_Init^0,c
  1836  000A5C  0EF8               	movlw	248
  1837  000A5E                     u987:
  1838  000A5E  2EE8               	decfsz	wreg,f,c
  1839  000A60  D7FE               	bra	u987
  1840  000A62  2E1D               	decfsz	??_LCD_Init^0,f,c
  1841  000A64  D7FC               	bra	u987
  1842  000A66  D000               	nop2	
  1843  000A68                     
  1844                           ;LiquidCrystalDisplay.c: 82:     LCD_Write(0x03);
  1845  000A68  0E03               	movlw	3
  1846  000A6A  EC63  F007         	call	_LCD_Write
  1847  000A6E                     
  1848                           ;LiquidCrystalDisplay.c: 83:     _delay((unsigned long)((16)*(16000000/4000.0)));
  1849  000A6E  0E54               	movlw	84
  1850  000A70  6E1D               	movwf	??_LCD_Init^0,c
  1851  000A72  0E1C               	movlw	28
  1852  000A74                     u997:
  1853  000A74  2EE8               	decfsz	wreg,f,c
  1854  000A76  D7FE               	bra	u997
  1855  000A78  2E1D               	decfsz	??_LCD_Init^0,f,c
  1856  000A7A  D7FC               	bra	u997
  1857  000A7C  D000               	nop2	
  1858  000A7E                     
  1859                           ;LiquidCrystalDisplay.c: 84:     LCD_Write(0x03);
  1860  000A7E  0E03               	movlw	3
  1861  000A80  EC63  F007         	call	_LCD_Write
  1862  000A84                     
  1863                           ;LiquidCrystalDisplay.c: 87:     LCD_Write(0x02);
  1864  000A84  0E02               	movlw	2
  1865  000A86  EC63  F007         	call	_LCD_Write
  1866  000A8A                     
  1867                           ;LiquidCrystalDisplay.c: 90:     LCD_Command (0x28);
  1868  000A8A  0E28               	movlw	40
  1869  000A8C  EC3B  F008         	call	_LCD_Command
  1870  000A90                     
  1871                           ;LiquidCrystalDisplay.c: 93:     LCD_Command (0x06);
  1872  000A90  0E06               	movlw	6
  1873  000A92  EC3B  F008         	call	_LCD_Command
  1874  000A96  0E08               	movlw	8
  1875  000A98  6E2A               	movwf	LCD_Init@cmd^0,c
  1876  000A9A  842A               	bsf	LCD_Init@cmd^0,2,c
  1877  000A9C  502A               	movf	LCD_Init@cmd^0,w,c
  1878  000A9E  EC3B  F008         	call	_LCD_Command
  1879  000AA2                     
  1880                           ;LiquidCrystalDisplay.c: 97:     LCD_Command (0x01);;
  1881  000AA2  0E01               	movlw	1
  1882  000AA4  EC3B  F008         	call	_LCD_Command
  1883  000AA8                     
  1884                           ;LiquidCrystalDisplay.c: 99:     return 1;
  1885  000AA8  0E01               	movlw	1
  1886  000AAA                     l202:
  1887  000AAA  0012               	return		;funcret
  1888  000AAC                     __end_of_LCD_Init:
  1889                           	callstack 0
  1890                           
  1891 ;; *************** function _LCD_DrawBigDigit *****************
  1892 ;; Defined at:
  1893 ;;		line 150 in file "LCD_BIGDigits.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  digit           1    wreg     unsigned char 
  1896 ;;  xpos            1   18[COMRAM] unsigned char 
  1897 ;;  ypos            1   19[COMRAM] unsigned char 
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;  digit           1   22[COMRAM] unsigned char 
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1909 ;;      Params:         2       0       0       0       0       0       0
  1910 ;;      Locals:         1       0       0       0       0       0       0
  1911 ;;      Temps:          2       0       0       0       0       0       0
  1912 ;;      Totals:         5       0       0       0       0       0       0
  1913 ;;Total ram usage:        5 bytes
  1914 ;; Hardware stack levels used: 1
  1915 ;; Hardware stack levels required when called: 4
  1916 ;; This function calls:
  1917 ;;		_LCD_Command
  1918 ;;		_LCD_putc
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           	psect	text8
  1925  0006FC                     __ptext8:
  1926                           	callstack 0
  1927  0006FC                     _LCD_DrawBigDigit:
  1928                           	callstack 26
  1929                           
  1930                           ;incstack = 0
  1931                           ;LCD_DrawBigDigit@digit stored from wreg
  1932  0006FC  6E17               	movwf	LCD_DrawBigDigit@digit^0,c
  1933  0006FE                     
  1934                           ;LCD_BIGDigits.c: 151:     if (digit > 9 || current_digits == ((void*)0)) return;
  1935  0006FE  0E0A               	movlw	10
  1936  000700  6017               	cpfslt	LCD_DrawBigDigit@digit^0,c
  1937  000702  EF85  F003         	goto	u691
  1938  000706  EF87  F003         	goto	u690
  1939  00070A                     u691:
  1940  00070A  EF6E  F004         	goto	l39
  1941  00070E                     u690:
  1942  00070E  5039               	movf	_current_digits^0,w,c
  1943  000710  103A               	iorwf	(_current_digits+1)^0,w,c
  1944  000712  A4D8               	btfss	status,2,c
  1945  000714  EF8E  F003         	goto	u701
  1946  000718  EF90  F003         	goto	u700
  1947  00071C                     u701:
  1948  00071C  EF92  F003         	goto	l1378
  1949  000720                     u700:
  1950  000720  EF6E  F004         	goto	l39
  1951  000724                     l1378:
  1952  000724  5013               	movf	LCD_DrawBigDigit@xpos^0,w,c
  1953  000726  A4D8               	btfss	status,2,c
  1954  000728  EF98  F003         	goto	u711
  1955  00072C  EF9A  F003         	goto	u710
  1956  000730                     u711:
  1957  000730  EFA0  F003         	goto	l1382
  1958  000734                     u710:
  1959  000734  5014               	movf	LCD_DrawBigDigit@ypos^0,w,c
  1960  000736  0F80               	addlw	128
  1961  000738  EC3B  F008         	call	_LCD_Command
  1962  00073C  EFCC  F003         	goto	l1394
  1963  000740                     l1382:
  1964  000740  0413               	decf	LCD_DrawBigDigit@xpos^0,w,c
  1965  000742  A4D8               	btfss	status,2,c
  1966  000744  EFA6  F003         	goto	u721
  1967  000748  EFA8  F003         	goto	u720
  1968  00074C                     u721:
  1969  00074C  EFAE  F003         	goto	l1386
  1970  000750                     u720:
  1971  000750  5014               	movf	LCD_DrawBigDigit@ypos^0,w,c
  1972  000752  0FC0               	addlw	192
  1973  000754  EC3B  F008         	call	_LCD_Command
  1974  000758  EFCC  F003         	goto	l1394
  1975  00075C                     l1386:
  1976  00075C  0E02               	movlw	2
  1977  00075E  1813               	xorwf	LCD_DrawBigDigit@xpos^0,w,c
  1978  000760  A4D8               	btfss	status,2,c
  1979  000762  EFB5  F003         	goto	u731
  1980  000766  EFB7  F003         	goto	u730
  1981  00076A                     u731:
  1982  00076A  EFBD  F003         	goto	l1390
  1983  00076E                     u730:
  1984  00076E  5014               	movf	LCD_DrawBigDigit@ypos^0,w,c
  1985  000770  0F94               	addlw	148
  1986  000772  EC3B  F008         	call	_LCD_Command
  1987  000776  EFCC  F003         	goto	l1394
  1988  00077A                     l1390:
  1989  00077A  0E03               	movlw	3
  1990  00077C  1813               	xorwf	LCD_DrawBigDigit@xpos^0,w,c
  1991  00077E  A4D8               	btfss	status,2,c
  1992  000780  EFC4  F003         	goto	u741
  1993  000784  EFC6  F003         	goto	u740
  1994  000788                     u741:
  1995  000788  EFCC  F003         	goto	l42
  1996  00078C                     u740:
  1997  00078C  5014               	movf	LCD_DrawBigDigit@ypos^0,w,c
  1998  00078E  0FD4               	addlw	212
  1999  000790  EC3B  F008         	call	_LCD_Command
  2000  000794  EFCC  F003         	goto	l1394
  2001  000798                     l42:
  2002  000798                     l1394:
  2003                           
  2004                           ;LCD_BIGDigits.c: 154:     LCD_putc(current_digits[digit][0]);
  2005  000798  5017               	movf	LCD_DrawBigDigit@digit^0,w,c
  2006  00079A  0D04               	mullw	4
  2007  00079C  CFF3 F015          	movff	prodl,??_LCD_DrawBigDigit
  2008  0007A0  CFF4 F016          	movff	prodh,??_LCD_DrawBigDigit+1
  2009  0007A4  5015               	movf	??_LCD_DrawBigDigit^0,w,c
  2010  0007A6  2439               	addwf	_current_digits^0,w,c
  2011  0007A8  6ED9               	movwf	fsr2l,c
  2012  0007AA  5016               	movf	(??_LCD_DrawBigDigit+1)^0,w,c
  2013  0007AC  203A               	addwfc	(_current_digits+1)^0,w,c
  2014  0007AE  6EDA               	movwf	fsr2h,c
  2015  0007B0  50DF               	movf	indf2,w,c
  2016  0007B2  EC5B  F008         	call	_LCD_putc
  2017  0007B6                     
  2018                           ;LCD_BIGDigits.c: 155:     LCD_putc(current_digits[digit][1]);
  2019  0007B6  5017               	movf	LCD_DrawBigDigit@digit^0,w,c
  2020  0007B8  0D04               	mullw	4
  2021  0007BA  C039  F015         	movff	_current_digits,??_LCD_DrawBigDigit
  2022  0007BE  C03A  F016         	movff	_current_digits+1,??_LCD_DrawBigDigit+1
  2023  0007C2  50F3               	movf	243,w,c
  2024  0007C4  2615               	addwf	??_LCD_DrawBigDigit^0,f,c
  2025  0007C6  50F4               	movf	244,w,c
  2026  0007C8  2216               	addwfc	(??_LCD_DrawBigDigit+1)^0,f,c
  2027  0007CA  0E01               	movlw	1
  2028  0007CC  2415               	addwf	??_LCD_DrawBigDigit^0,w,c
  2029  0007CE  6ED9               	movwf	fsr2l,c
  2030  0007D0  0E00               	movlw	0
  2031  0007D2  2016               	addwfc	(??_LCD_DrawBigDigit+1)^0,w,c
  2032  0007D4  6EDA               	movwf	fsr2h,c
  2033  0007D6  50DF               	movf	indf2,w,c
  2034  0007D8  EC5B  F008         	call	_LCD_putc
  2035  0007DC  5013               	movf	LCD_DrawBigDigit@xpos^0,w,c
  2036  0007DE  6E15               	movwf	??_LCD_DrawBigDigit^0,c
  2037  0007E0  6A16               	clrf	(??_LCD_DrawBigDigit+1)^0,c
  2038  0007E2  0E01               	movlw	1
  2039  0007E4  2615               	addwf	??_LCD_DrawBigDigit^0,f,c
  2040  0007E6  0E00               	movlw	0
  2041  0007E8  2216               	addwfc	(??_LCD_DrawBigDigit+1)^0,f,c
  2042  0007EA  5015               	movf	??_LCD_DrawBigDigit^0,w,c
  2043  0007EC  1016               	iorwf	(??_LCD_DrawBigDigit+1)^0,w,c
  2044  0007EE  A4D8               	btfss	status,2,c
  2045  0007F0  EFFC  F003         	goto	u751
  2046  0007F4  EFFE  F003         	goto	u750
  2047  0007F8                     u751:
  2048  0007F8  EF04  F004         	goto	l1402
  2049  0007FC                     u750:
  2050  0007FC  5014               	movf	LCD_DrawBigDigit@ypos^0,w,c
  2051  0007FE  0F80               	addlw	128
  2052  000800  EC3B  F008         	call	_LCD_Command
  2053  000804  EF48  F004         	goto	l1414
  2054  000808                     l1402:
  2055  000808  5013               	movf	LCD_DrawBigDigit@xpos^0,w,c
  2056  00080A  6E15               	movwf	??_LCD_DrawBigDigit^0,c
  2057  00080C  6A16               	clrf	(??_LCD_DrawBigDigit+1)^0,c
  2058  00080E  0E01               	movlw	1
  2059  000810  2615               	addwf	??_LCD_DrawBigDigit^0,f,c
  2060  000812  0E00               	movlw	0
  2061  000814  2216               	addwfc	(??_LCD_DrawBigDigit+1)^0,f,c
  2062  000816  0415               	decf	??_LCD_DrawBigDigit^0,w,c
  2063  000818  1016               	iorwf	(??_LCD_DrawBigDigit+1)^0,w,c
  2064  00081A  A4D8               	btfss	status,2,c
  2065  00081C  EF12  F004         	goto	u761
  2066  000820  EF14  F004         	goto	u760
  2067  000824                     u761:
  2068  000824  EF1A  F004         	goto	l1406
  2069  000828                     u760:
  2070  000828  5014               	movf	LCD_DrawBigDigit@ypos^0,w,c
  2071  00082A  0FC0               	addlw	192
  2072  00082C  EC3B  F008         	call	_LCD_Command
  2073  000830  EF48  F004         	goto	l1414
  2074  000834                     l1406:
  2075  000834  5013               	movf	LCD_DrawBigDigit@xpos^0,w,c
  2076  000836  6E15               	movwf	??_LCD_DrawBigDigit^0,c
  2077  000838  6A16               	clrf	(??_LCD_DrawBigDigit+1)^0,c
  2078  00083A  0E01               	movlw	1
  2079  00083C  2615               	addwf	??_LCD_DrawBigDigit^0,f,c
  2080  00083E  0E00               	movlw	0
  2081  000840  2216               	addwfc	(??_LCD_DrawBigDigit+1)^0,f,c
  2082  000842  0E02               	movlw	2
  2083  000844  1815               	xorwf	??_LCD_DrawBigDigit^0,w,c
  2084  000846  1016               	iorwf	(??_LCD_DrawBigDigit+1)^0,w,c
  2085  000848  A4D8               	btfss	status,2,c
  2086  00084A  EF29  F004         	goto	u771
  2087  00084E  EF2B  F004         	goto	u770
  2088  000852                     u771:
  2089  000852  EF31  F004         	goto	l1410
  2090  000856                     u770:
  2091  000856  5014               	movf	LCD_DrawBigDigit@ypos^0,w,c
  2092  000858  0F94               	addlw	148
  2093  00085A  EC3B  F008         	call	_LCD_Command
  2094  00085E  EF48  F004         	goto	l1414
  2095  000862                     l1410:
  2096  000862  5013               	movf	LCD_DrawBigDigit@xpos^0,w,c
  2097  000864  6E15               	movwf	??_LCD_DrawBigDigit^0,c
  2098  000866  6A16               	clrf	(??_LCD_DrawBigDigit+1)^0,c
  2099  000868  0E01               	movlw	1
  2100  00086A  2615               	addwf	??_LCD_DrawBigDigit^0,f,c
  2101  00086C  0E00               	movlw	0
  2102  00086E  2216               	addwfc	(??_LCD_DrawBigDigit+1)^0,f,c
  2103  000870  0E03               	movlw	3
  2104  000872  1815               	xorwf	??_LCD_DrawBigDigit^0,w,c
  2105  000874  1016               	iorwf	(??_LCD_DrawBigDigit+1)^0,w,c
  2106  000876  A4D8               	btfss	status,2,c
  2107  000878  EF40  F004         	goto	u781
  2108  00087C  EF42  F004         	goto	u780
  2109  000880                     u781:
  2110  000880  EF48  F004         	goto	l51
  2111  000884                     u780:
  2112  000884  5014               	movf	LCD_DrawBigDigit@ypos^0,w,c
  2113  000886  0FD4               	addlw	212
  2114  000888  EC3B  F008         	call	_LCD_Command
  2115  00088C  EF48  F004         	goto	l1414
  2116  000890                     l51:
  2117  000890                     l1414:
  2118                           
  2119                           ;LCD_BIGDigits.c: 158:     LCD_putc(current_digits[digit][2]);
  2120  000890  5017               	movf	LCD_DrawBigDigit@digit^0,w,c
  2121  000892  0D04               	mullw	4
  2122  000894  C039  F015         	movff	_current_digits,??_LCD_DrawBigDigit
  2123  000898  C03A  F016         	movff	_current_digits+1,??_LCD_DrawBigDigit+1
  2124  00089C  50F3               	movf	243,w,c
  2125  00089E  2615               	addwf	??_LCD_DrawBigDigit^0,f,c
  2126  0008A0  50F4               	movf	244,w,c
  2127  0008A2  2216               	addwfc	(??_LCD_DrawBigDigit+1)^0,f,c
  2128  0008A4  0E02               	movlw	2
  2129  0008A6  2415               	addwf	??_LCD_DrawBigDigit^0,w,c
  2130  0008A8  6ED9               	movwf	fsr2l,c
  2131  0008AA  0E00               	movlw	0
  2132  0008AC  2016               	addwfc	(??_LCD_DrawBigDigit+1)^0,w,c
  2133  0008AE  6EDA               	movwf	fsr2h,c
  2134  0008B0  50DF               	movf	indf2,w,c
  2135  0008B2  EC5B  F008         	call	_LCD_putc
  2136  0008B6                     
  2137                           ;LCD_BIGDigits.c: 159:     LCD_putc(current_digits[digit][3]);
  2138  0008B6  5017               	movf	LCD_DrawBigDigit@digit^0,w,c
  2139  0008B8  0D04               	mullw	4
  2140  0008BA  C039  F015         	movff	_current_digits,??_LCD_DrawBigDigit
  2141  0008BE  C03A  F016         	movff	_current_digits+1,??_LCD_DrawBigDigit+1
  2142  0008C2  50F3               	movf	243,w,c
  2143  0008C4  2615               	addwf	??_LCD_DrawBigDigit^0,f,c
  2144  0008C6  50F4               	movf	244,w,c
  2145  0008C8  2216               	addwfc	(??_LCD_DrawBigDigit+1)^0,f,c
  2146  0008CA  0E03               	movlw	3
  2147  0008CC  2415               	addwf	??_LCD_DrawBigDigit^0,w,c
  2148  0008CE  6ED9               	movwf	fsr2l,c
  2149  0008D0  0E00               	movlw	0
  2150  0008D2  2016               	addwfc	(??_LCD_DrawBigDigit+1)^0,w,c
  2151  0008D4  6EDA               	movwf	fsr2h,c
  2152  0008D6  50DF               	movf	indf2,w,c
  2153  0008D8  EC5B  F008         	call	_LCD_putc
  2154  0008DC                     l39:
  2155  0008DC  0012               	return		;funcret
  2156  0008DE                     __end_of_LCD_DrawBigDigit:
  2157                           	callstack 0
  2158                           
  2159 ;; *************** function _LCD_putc *****************
  2160 ;; Defined at:
  2161 ;;		line 125 in file "LiquidCrystalDisplay.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  c               1    wreg     unsigned char 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  c               1   16[COMRAM] unsigned char 
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  1    wreg      void 
  2168 ;; Registers used:
  2169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2175 ;;      Params:         0       0       0       0       0       0       0
  2176 ;;      Locals:         1       0       0       0       0       0       0
  2177 ;;      Temps:          2       0       0       0       0       0       0
  2178 ;;      Totals:         3       0       0       0       0       0       0
  2179 ;;Total ram usage:        3 bytes
  2180 ;; Hardware stack levels used: 1
  2181 ;; Hardware stack levels required when called: 3
  2182 ;; This function calls:
  2183 ;;		_LCD_Write
  2184 ;; This function is called by:
  2185 ;;		_LCD_DrawBigDigit
  2186 ;;		_LCD_puts
  2187 ;;		_LCD_createChar
  2188 ;;		_LCD_putrs
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text9
  2193  0010B6                     __ptext9:
  2194                           	callstack 0
  2195  0010B6                     _LCD_putc:
  2196                           	callstack 26
  2197                           
  2198                           ;incstack = 0
  2199                           ;LCD_putc@c stored from wreg
  2200  0010B6  6E11               	movwf	LCD_putc@c^0,c
  2201  0010B8                     
  2202                           ;LiquidCrystalDisplay.c: 126:     *(LCDisplay.PORT) |= 1 << LCDisplay.RS;
  2203  0010B8  C031  F00F         	movff	_LCDisplay+4,??_LCD_putc
  2204  0010BC  0E01               	movlw	1
  2205  0010BE  6E10               	movwf	(??_LCD_putc+1)^0,c
  2206  0010C0  2A0F               	incf	??_LCD_putc^0,f,c
  2207  0010C2  EF65  F008         	goto	u654
  2208  0010C6                     u655:
  2209  0010C6  90D8               	bcf	status,0,c
  2210  0010C8  3610               	rlcf	(??_LCD_putc+1)^0,f,c
  2211  0010CA                     u654:
  2212  0010CA  2E0F               	decfsz	??_LCD_putc^0,f,c
  2213  0010CC  EF63  F008         	goto	u655
  2214  0010D0  C02F  FFD9         	movff	_LCDisplay+2,fsr2l
  2215  0010D4  C030  FFDA         	movff	_LCDisplay+3,fsr2h
  2216  0010D8  5010               	movf	(??_LCD_putc+1)^0,w,c
  2217  0010DA  12DF               	iorwf	indf2,f,c
  2218  0010DC                     
  2219                           ;LiquidCrystalDisplay.c: 127:     LCD_Write((c & 0xF0) >> 4);
  2220  0010DC  3811               	swapf	LCD_putc@c^0,w,c
  2221  0010DE  0B0F               	andlw	15
  2222  0010E0  0B0F               	andlw	15
  2223  0010E2  EC63  F007         	call	_LCD_Write
  2224  0010E6                     
  2225                           ;LiquidCrystalDisplay.c: 128:     LCD_Write(c & 0x0F);
  2226  0010E6  5011               	movf	LCD_putc@c^0,w,c
  2227  0010E8  0B0F               	andlw	15
  2228  0010EA  EC63  F007         	call	_LCD_Write
  2229  0010EE  0012               	return		;funcret
  2230  0010F0                     __end_of_LCD_putc:
  2231                           	callstack 0
  2232                           
  2233 ;; *************** function _LCD_Command *****************
  2234 ;; Defined at:
  2235 ;;		line 119 in file "LiquidCrystalDisplay.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  cmd             1    wreg     unsigned char 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  cmd             1   17[COMRAM] unsigned char 
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  1    wreg      void 
  2242 ;; Registers used:
  2243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2249 ;;      Params:         0       0       0       0       0       0       0
  2250 ;;      Locals:         1       0       0       0       0       0       0
  2251 ;;      Temps:          3       0       0       0       0       0       0
  2252 ;;      Totals:         4       0       0       0       0       0       0
  2253 ;;Total ram usage:        4 bytes
  2254 ;; Hardware stack levels used: 1
  2255 ;; Hardware stack levels required when called: 3
  2256 ;; This function calls:
  2257 ;;		_LCD_Write
  2258 ;; This function is called by:
  2259 ;;		_LCD_DrawBigDigit
  2260 ;;		_main
  2261 ;;		_LCD_Init
  2262 ;;		_LCD_createChar
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           	psect	text10
  2267  001076                     __ptext10:
  2268                           	callstack 0
  2269  001076                     _LCD_Command:
  2270                           	callstack 25
  2271                           
  2272                           ;incstack = 0
  2273                           ;LCD_Command@cmd stored from wreg
  2274  001076  6E12               	movwf	LCD_Command@cmd^0,c
  2275  001078                     
  2276                           ;LiquidCrystalDisplay.c: 120:     *(LCDisplay.PORT) &= ~(1 << LCDisplay.RS);
  2277  001078  C031  F00F         	movff	_LCDisplay+4,??_LCD_Command
  2278  00107C  0E01               	movlw	1
  2279  00107E  6E10               	movwf	(??_LCD_Command+1)^0,c
  2280  001080  2A0F               	incf	??_LCD_Command^0,f,c
  2281  001082  EF45  F008         	goto	u644
  2282  001086                     u645:
  2283  001086  90D8               	bcf	status,0,c
  2284  001088  3610               	rlcf	(??_LCD_Command+1)^0,f,c
  2285  00108A                     u644:
  2286  00108A  2E0F               	decfsz	??_LCD_Command^0,f,c
  2287  00108C  EF43  F008         	goto	u645
  2288  001090  5010               	movf	(??_LCD_Command+1)^0,w,c
  2289  001092  0AFF               	xorlw	255
  2290  001094  6E11               	movwf	(??_LCD_Command+2)^0,c
  2291  001096  C02F  FFD9         	movff	_LCDisplay+2,fsr2l
  2292  00109A  C030  FFDA         	movff	_LCDisplay+3,fsr2h
  2293  00109E  5011               	movf	(??_LCD_Command+2)^0,w,c
  2294  0010A0  16DF               	andwf	indf2,f,c
  2295  0010A2                     
  2296                           ;LiquidCrystalDisplay.c: 121:     LCD_Write((cmd & 0xF0) >> 4);
  2297  0010A2  3812               	swapf	LCD_Command@cmd^0,w,c
  2298  0010A4  0B0F               	andlw	15
  2299  0010A6  0B0F               	andlw	15
  2300  0010A8  EC63  F007         	call	_LCD_Write
  2301  0010AC                     
  2302                           ;LiquidCrystalDisplay.c: 122:     LCD_Write(cmd & 0x0F);
  2303  0010AC  5012               	movf	LCD_Command@cmd^0,w,c
  2304  0010AE  0B0F               	andlw	15
  2305  0010B0  EC63  F007         	call	_LCD_Write
  2306  0010B4  0012               	return		;funcret
  2307  0010B6                     __end_of_LCD_Command:
  2308                           	callstack 0
  2309                           
  2310 ;; *************** function _LCD_Write *****************
  2311 ;; Defined at:
  2312 ;;		line 112 in file "LiquidCrystalDisplay.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;  data            1    wreg     unsigned char 
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;  data            1   13[COMRAM] unsigned char 
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      void 
  2319 ;; Registers used:
  2320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2326 ;;      Params:         0       0       0       0       0       0       0
  2327 ;;      Locals:         1       0       0       0       0       0       0
  2328 ;;      Temps:          3       0       0       0       0       0       0
  2329 ;;      Totals:         4       0       0       0       0       0       0
  2330 ;;Total ram usage:        4 bytes
  2331 ;; Hardware stack levels used: 1
  2332 ;; Hardware stack levels required when called: 2
  2333 ;; This function calls:
  2334 ;;		_LCD_Out
  2335 ;; This function is called by:
  2336 ;;		_LCD_Init
  2337 ;;		_LCD_Command
  2338 ;;		_LCD_putc
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           	psect	text11
  2343  000EC6                     __ptext11:
  2344                           	callstack 0
  2345  000EC6                     _LCD_Write:
  2346                           	callstack 26
  2347                           
  2348                           ;incstack = 0
  2349                           ;LCD_Write@data stored from wreg
  2350  000EC6  6E0E               	movwf	LCD_Write@data^0,c
  2351  000EC8                     
  2352                           ;LiquidCrystalDisplay.c: 113:     LCD_Out(data);
  2353  000EC8  500E               	movf	LCD_Write@data^0,w,c
  2354  000ECA  EC22  F006         	call	_LCD_Out
  2355  000ECE                     
  2356                           ;LiquidCrystalDisplay.c: 114:     *(LCDisplay.PORT) |= 1 << LCDisplay.EN;
  2357  000ECE  C032  F00B         	movff	_LCDisplay+5,??_LCD_Write
  2358  000ED2  0E01               	movlw	1
  2359  000ED4  6E0C               	movwf	(??_LCD_Write+1)^0,c
  2360  000ED6  2A0B               	incf	??_LCD_Write^0,f,c
  2361  000ED8  EF70  F007         	goto	u624
  2362  000EDC                     u625:
  2363  000EDC  90D8               	bcf	status,0,c
  2364  000EDE  360C               	rlcf	(??_LCD_Write+1)^0,f,c
  2365  000EE0                     u624:
  2366  000EE0  2E0B               	decfsz	??_LCD_Write^0,f,c
  2367  000EE2  EF6E  F007         	goto	u625
  2368  000EE6  C02F  FFD9         	movff	_LCDisplay+2,fsr2l
  2369  000EEA  C030  FFDA         	movff	_LCDisplay+3,fsr2h
  2370  000EEE  500C               	movf	(??_LCD_Write+1)^0,w,c
  2371  000EF0  12DF               	iorwf	indf2,f,c
  2372  000EF2                     
  2373                           ;LiquidCrystalDisplay.c: 115:     _delay((unsigned long)((4)*(16000000/4000.0)));
  2374  000EF2  0E15               	movlw	21
  2375  000EF4  6E0B               	movwf	??_LCD_Write^0,c
  2376  000EF6  0EC6               	movlw	198
  2377  000EF8                     u1007:
  2378  000EF8  2EE8               	decfsz	wreg,f,c
  2379  000EFA  D7FE               	bra	u1007
  2380  000EFC  2E0B               	decfsz	??_LCD_Write^0,f,c
  2381  000EFE  D7FC               	bra	u1007
  2382  000F00  D000               	nop2	
  2383  000F02                     
  2384                           ;LiquidCrystalDisplay.c: 116:     *(LCDisplay.PORT) &= ~(1 << LCDisplay.EN);
  2385  000F02  C032  F00B         	movff	_LCDisplay+5,??_LCD_Write
  2386  000F06  0E01               	movlw	1
  2387  000F08  6E0C               	movwf	(??_LCD_Write+1)^0,c
  2388  000F0A  2A0B               	incf	??_LCD_Write^0,f,c
  2389  000F0C  EF8A  F007         	goto	u634
  2390  000F10                     u635:
  2391  000F10  90D8               	bcf	status,0,c
  2392  000F12  360C               	rlcf	(??_LCD_Write+1)^0,f,c
  2393  000F14                     u634:
  2394  000F14  2E0B               	decfsz	??_LCD_Write^0,f,c
  2395  000F16  EF88  F007         	goto	u635
  2396  000F1A  500C               	movf	(??_LCD_Write+1)^0,w,c
  2397  000F1C  0AFF               	xorlw	255
  2398  000F1E  6E0D               	movwf	(??_LCD_Write+2)^0,c
  2399  000F20  C02F  FFD9         	movff	_LCDisplay+2,fsr2l
  2400  000F24  C030  FFDA         	movff	_LCDisplay+3,fsr2h
  2401  000F28  500D               	movf	(??_LCD_Write+2)^0,w,c
  2402  000F2A  16DF               	andwf	indf2,f,c
  2403  000F2C  0012               	return		;funcret
  2404  000F2E                     __end_of_LCD_Write:
  2405                           	callstack 0
  2406                           
  2407 ;; *************** function _LCD_Out *****************
  2408 ;; Defined at:
  2409 ;;		line 102 in file "LiquidCrystalDisplay.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  c               1    wreg     unsigned char 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  c               1    9[COMRAM] unsigned char 
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  1    wreg      void 
  2416 ;; Registers used:
  2417 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2423 ;;      Params:         0       0       0       0       0       0       0
  2424 ;;      Locals:         1       0       0       0       0       0       0
  2425 ;;      Temps:          9       0       0       0       0       0       0
  2426 ;;      Totals:        10       0       0       0       0       0       0
  2427 ;;Total ram usage:       10 bytes
  2428 ;; Hardware stack levels used: 1
  2429 ;; Hardware stack levels required when called: 1
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_LCD_Write
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text12
  2438  000C44                     __ptext12:
  2439                           	callstack 0
  2440  000C44                     _LCD_Out:
  2441                           	callstack 26
  2442                           
  2443                           ;incstack = 0
  2444                           ;LCD_Out@c stored from wreg
  2445  000C44  6E0A               	movwf	LCD_Out@c^0,c
  2446  000C46                     
  2447                           ;LiquidCrystalDisplay.c: 104:     *(LCDisplay.PORT) &= ~((1 << LCDisplay.D4) | (1 << LCD
      +                          isplay.D5) | (1 << LCDisplay.D6) | (1 << LCDisplay.D7));
  2448  000C46  C036  F001         	movff	_LCDisplay+9,??_LCD_Out
  2449  000C4A  0E01               	movlw	1
  2450  000C4C  6E02               	movwf	(??_LCD_Out+1)^0,c
  2451  000C4E  2A01               	incf	??_LCD_Out^0,f,c
  2452  000C50  EF2C  F006         	goto	u504
  2453  000C54                     u505:
  2454  000C54  90D8               	bcf	status,0,c
  2455  000C56  3602               	rlcf	(??_LCD_Out+1)^0,f,c
  2456  000C58                     u504:
  2457  000C58  2E01               	decfsz	??_LCD_Out^0,f,c
  2458  000C5A  EF2A  F006         	goto	u505
  2459  000C5E  C035  F003         	movff	_LCDisplay+8,??_LCD_Out+2
  2460  000C62  0E01               	movlw	1
  2461  000C64  6E04               	movwf	(??_LCD_Out+3)^0,c
  2462  000C66  2A03               	incf	(??_LCD_Out+2)^0,f,c
  2463  000C68  EF38  F006         	goto	u514
  2464  000C6C                     u515:
  2465  000C6C  90D8               	bcf	status,0,c
  2466  000C6E  3604               	rlcf	(??_LCD_Out+3)^0,f,c
  2467  000C70                     u514:
  2468  000C70  2E03               	decfsz	(??_LCD_Out+2)^0,f,c
  2469  000C72  EF36  F006         	goto	u515
  2470  000C76  C034  F005         	movff	_LCDisplay+7,??_LCD_Out+4
  2471  000C7A  0E01               	movlw	1
  2472  000C7C  6E06               	movwf	(??_LCD_Out+5)^0,c
  2473  000C7E  2A05               	incf	(??_LCD_Out+4)^0,f,c
  2474  000C80  EF44  F006         	goto	u524
  2475  000C84                     u525:
  2476  000C84  90D8               	bcf	status,0,c
  2477  000C86  3606               	rlcf	(??_LCD_Out+5)^0,f,c
  2478  000C88                     u524:
  2479  000C88  2E05               	decfsz	(??_LCD_Out+4)^0,f,c
  2480  000C8A  EF42  F006         	goto	u525
  2481  000C8E  C033  F007         	movff	_LCDisplay+6,??_LCD_Out+6
  2482  000C92  0E01               	movlw	1
  2483  000C94  6E08               	movwf	(??_LCD_Out+7)^0,c
  2484  000C96  2A07               	incf	(??_LCD_Out+6)^0,f,c
  2485  000C98  EF50  F006         	goto	u534
  2486  000C9C                     u535:
  2487  000C9C  90D8               	bcf	status,0,c
  2488  000C9E  3608               	rlcf	(??_LCD_Out+7)^0,f,c
  2489  000CA0                     u534:
  2490  000CA0  2E07               	decfsz	(??_LCD_Out+6)^0,f,c
  2491  000CA2  EF4E  F006         	goto	u535
  2492  000CA6  5008               	movf	(??_LCD_Out+7)^0,w,c
  2493  000CA8  1006               	iorwf	(??_LCD_Out+5)^0,w,c
  2494  000CAA  1004               	iorwf	(??_LCD_Out+3)^0,w,c
  2495  000CAC  1002               	iorwf	(??_LCD_Out+1)^0,w,c
  2496  000CAE  0AFF               	xorlw	255
  2497  000CB0  6E09               	movwf	(??_LCD_Out+8)^0,c
  2498  000CB2  C02F  FFD9         	movff	_LCDisplay+2,fsr2l
  2499  000CB6  C030  FFDA         	movff	_LCDisplay+3,fsr2h
  2500  000CBA  5009               	movf	(??_LCD_Out+8)^0,w,c
  2501  000CBC  16DF               	andwf	indf2,f,c
  2502  000CBE                     
  2503                           ;LiquidCrystalDisplay.c: 106:     if(c & 1) *(LCDisplay.PORT) |= 1 << LCDisplay.D4;
  2504  000CBE  A00A               	btfss	LCD_Out@c^0,0,c
  2505  000CC0  EF64  F006         	goto	u541
  2506  000CC4  EF66  F006         	goto	u540
  2507  000CC8                     u541:
  2508  000CC8  EF78  F006         	goto	l1286
  2509  000CCC                     u540:
  2510  000CCC  C033  F001         	movff	_LCDisplay+6,??_LCD_Out
  2511  000CD0  0E01               	movlw	1
  2512  000CD2  6E02               	movwf	(??_LCD_Out+1)^0,c
  2513  000CD4  2A01               	incf	??_LCD_Out^0,f,c
  2514  000CD6  EF6F  F006         	goto	u554
  2515  000CDA                     u555:
  2516  000CDA  90D8               	bcf	status,0,c
  2517  000CDC  3602               	rlcf	(??_LCD_Out+1)^0,f,c
  2518  000CDE                     u554:
  2519  000CDE  2E01               	decfsz	??_LCD_Out^0,f,c
  2520  000CE0  EF6D  F006         	goto	u555
  2521  000CE4  C02F  FFD9         	movff	_LCDisplay+2,fsr2l
  2522  000CE8  C030  FFDA         	movff	_LCDisplay+3,fsr2h
  2523  000CEC  5002               	movf	(??_LCD_Out+1)^0,w,c
  2524  000CEE  12DF               	iorwf	indf2,f,c
  2525  000CF0                     l1286:
  2526                           
  2527                           ;LiquidCrystalDisplay.c: 107:     if(c & 2) *(LCDisplay.PORT) |= 1 << LCDisplay.D5;
  2528  000CF0  A20A               	btfss	LCD_Out@c^0,1,c
  2529  000CF2  EF7D  F006         	goto	u561
  2530  000CF6  EF7F  F006         	goto	u560
  2531  000CFA                     u561:
  2532  000CFA  EF91  F006         	goto	l1290
  2533  000CFE                     u560:
  2534  000CFE  C034  F001         	movff	_LCDisplay+7,??_LCD_Out
  2535  000D02  0E01               	movlw	1
  2536  000D04  6E02               	movwf	(??_LCD_Out+1)^0,c
  2537  000D06  2A01               	incf	??_LCD_Out^0,f,c
  2538  000D08  EF88  F006         	goto	u574
  2539  000D0C                     u575:
  2540  000D0C  90D8               	bcf	status,0,c
  2541  000D0E  3602               	rlcf	(??_LCD_Out+1)^0,f,c
  2542  000D10                     u574:
  2543  000D10  2E01               	decfsz	??_LCD_Out^0,f,c
  2544  000D12  EF86  F006         	goto	u575
  2545  000D16  C02F  FFD9         	movff	_LCDisplay+2,fsr2l
  2546  000D1A  C030  FFDA         	movff	_LCDisplay+3,fsr2h
  2547  000D1E  5002               	movf	(??_LCD_Out+1)^0,w,c
  2548  000D20  12DF               	iorwf	indf2,f,c
  2549  000D22                     l1290:
  2550                           
  2551                           ;LiquidCrystalDisplay.c: 108:     if(c & 4) *(LCDisplay.PORT) |= 1 << LCDisplay.D6;
  2552  000D22  A40A               	btfss	LCD_Out@c^0,2,c
  2553  000D24  EF96  F006         	goto	u581
  2554  000D28  EF98  F006         	goto	u580
  2555  000D2C                     u581:
  2556  000D2C  EFAA  F006         	goto	l1294
  2557  000D30                     u580:
  2558  000D30  C035  F001         	movff	_LCDisplay+8,??_LCD_Out
  2559  000D34  0E01               	movlw	1
  2560  000D36  6E02               	movwf	(??_LCD_Out+1)^0,c
  2561  000D38  2A01               	incf	??_LCD_Out^0,f,c
  2562  000D3A  EFA1  F006         	goto	u594
  2563  000D3E                     u595:
  2564  000D3E  90D8               	bcf	status,0,c
  2565  000D40  3602               	rlcf	(??_LCD_Out+1)^0,f,c
  2566  000D42                     u594:
  2567  000D42  2E01               	decfsz	??_LCD_Out^0,f,c
  2568  000D44  EF9F  F006         	goto	u595
  2569  000D48  C02F  FFD9         	movff	_LCDisplay+2,fsr2l
  2570  000D4C  C030  FFDA         	movff	_LCDisplay+3,fsr2h
  2571  000D50  5002               	movf	(??_LCD_Out+1)^0,w,c
  2572  000D52  12DF               	iorwf	indf2,f,c
  2573  000D54                     l1294:
  2574                           
  2575                           ;LiquidCrystalDisplay.c: 109:     if(c & 8) *(LCDisplay.PORT) |= 1 << LCDisplay.D7;
  2576  000D54  A60A               	btfss	LCD_Out@c^0,3,c
  2577  000D56  EFAF  F006         	goto	u601
  2578  000D5A  EFB1  F006         	goto	u600
  2579  000D5E                     u601:
  2580  000D5E  EFC3  F006         	goto	l214
  2581  000D62                     u600:
  2582  000D62  C036  F001         	movff	_LCDisplay+9,??_LCD_Out
  2583  000D66  0E01               	movlw	1
  2584  000D68  6E02               	movwf	(??_LCD_Out+1)^0,c
  2585  000D6A  2A01               	incf	??_LCD_Out^0,f,c
  2586  000D6C  EFBA  F006         	goto	u614
  2587  000D70                     u615:
  2588  000D70  90D8               	bcf	status,0,c
  2589  000D72  3602               	rlcf	(??_LCD_Out+1)^0,f,c
  2590  000D74                     u614:
  2591  000D74  2E01               	decfsz	??_LCD_Out^0,f,c
  2592  000D76  EFB8  F006         	goto	u615
  2593  000D7A  C02F  FFD9         	movff	_LCDisplay+2,fsr2l
  2594  000D7E  C030  FFDA         	movff	_LCDisplay+3,fsr2h
  2595  000D82  5002               	movf	(??_LCD_Out+1)^0,w,c
  2596  000D84  12DF               	iorwf	indf2,f,c
  2597  000D86                     l214:
  2598  000D86  0012               	return		;funcret
  2599  000D88                     __end_of_LCD_Out:
  2600                           	callstack 0
  2601                           
  2602 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  2603 ;; Defined at:
  2604 ;;		line 47 in file "main.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;		None
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;		None
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, status,2, status,0
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2618 ;;      Params:         0       0       0       0       0       0       0
  2619 ;;      Locals:         0       0       0       0       0       0       0
  2620 ;;      Temps:          0       0       0       0       0       0       0
  2621 ;;      Totals:         0       0       0       0       0       0       0
  2622 ;;Total ram usage:        0 bytes
  2623 ;; Hardware stack levels used: 1
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		Interrupt level 2
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	intcode
  2632  000008                     __pintcode:
  2633                           	callstack 0
  2634  000008                     _INTERRUPT_InterruptManagerHigh:
  2635                           	callstack 25
  2636                           
  2637                           ;incstack = 0
  2638  000008  8247               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2639  00000A                     
  2640                           ;main.c: 48:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
  2641  00000A  AAF2               	btfss	242,5,c	;volatile
  2642  00000C  EF0A  F000         	goto	i2u43_41
  2643  000010  EF0C  F000         	goto	i2u43_40
  2644  000014                     i2u43_41:
  2645  000014  EF2B  F000         	goto	i2l112
  2646  000018                     i2u43_40:
  2647  000018  A4F2               	btfss	242,2,c	;volatile
  2648  00001A  EF11  F000         	goto	i2u44_41
  2649  00001E  EF13  F000         	goto	i2u44_40
  2650  000022                     i2u44_41:
  2651  000022  EF2B  F000         	goto	i2l112
  2652  000026                     i2u44_40:
  2653  000026                     
  2654                           ;main.c: 49:         ++RTCC_Count;
  2655  000026  4A37               	infsnz	_RTCC_Count^0,f,c
  2656  000028  2A38               	incf	(_RTCC_Count+1)^0,f,c
  2657  00002A                     
  2658                           ;main.c: 50:         if (RTCC_Count >= 3000){
  2659  00002A  0EB8               	movlw	184
  2660  00002C  5C37               	subwf	_RTCC_Count^0,w,c
  2661  00002E  0E0B               	movlw	11
  2662  000030  5838               	subwfb	(_RTCC_Count+1)^0,w,c
  2663  000032  A0D8               	btfss	status,0,c
  2664  000034  EF1E  F000         	goto	i2u45_41
  2665  000038  EF20  F000         	goto	i2u45_40
  2666  00003C                     i2u45_41:
  2667  00003C  EF26  F000         	goto	i2l111
  2668  000040                     i2u45_40:
  2669  000040                     
  2670                           ;main.c: 51:             LCDUpdate = 1;
  2671  000040  0E01               	movlw	1
  2672  000042  6E3B               	movwf	_LCDUpdate^0,c
  2673                           
  2674                           ;main.c: 52:             RTCC_Count = 0;
  2675  000044  0E00               	movlw	0
  2676  000046  6E38               	movwf	(_RTCC_Count+1)^0,c
  2677  000048  0E00               	movlw	0
  2678  00004A  6E37               	movwf	_RTCC_Count^0,c
  2679  00004C                     i2l111:
  2680                           
  2681                           ;main.c: 54:         TMR0H = 0xF8;
  2682  00004C  0EF8               	movlw	248
  2683  00004E  6ED7               	movwf	215,c	;volatile
  2684                           
  2685                           ;main.c: 55:         TMR0L = 0x30;
  2686  000050  0E30               	movlw	48
  2687  000052  6ED6               	movwf	214,c	;volatile
  2688  000054                     
  2689                           ;main.c: 56:         INTCONbits.TMR0IF = 0;
  2690  000054  94F2               	bcf	242,2,c	;volatile
  2691  000056                     i2l112:
  2692  000056  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2693  000058  0011               	retfie		f
  2694  00005A                     __end_of_INTERRUPT_InterruptManagerHigh:
  2695                           	callstack 0
  2696                           
  2697                           	psect	rparam
  2698  0000                     
  2699                           	psect	temp
  2700  000047                     btemp:
  2701                           	callstack 0
  2702  000047                     	ds	1
  2703  0000                     int$flags	set	btemp
  2704  0000                     wtemp8	set	btemp+1
  2705  0000                     ttemp5	set	btemp+1
  2706  0000                     ttemp6	set	btemp+4
  2707  0000                     ttemp7	set	btemp+8
  2708                           
  2709                           	psect	idloc
  2710                           
  2711                           ;Config register IDLOC0 @ 0x200000
  2712                           ;	unspecified, using default values
  2713  200000                     	org	2097152
  2714  200000  FF                 	db	255
  2715                           
  2716                           ;Config register IDLOC1 @ 0x200001
  2717                           ;	unspecified, using default values
  2718  200001                     	org	2097153
  2719  200001  FF                 	db	255
  2720                           
  2721                           ;Config register IDLOC2 @ 0x200002
  2722                           ;	unspecified, using default values
  2723  200002                     	org	2097154
  2724  200002  FF                 	db	255
  2725                           
  2726                           ;Config register IDLOC3 @ 0x200003
  2727                           ;	unspecified, using default values
  2728  200003                     	org	2097155
  2729  200003  FF                 	db	255
  2730                           
  2731                           ;Config register IDLOC4 @ 0x200004
  2732                           ;	unspecified, using default values
  2733  200004                     	org	2097156
  2734  200004  FF                 	db	255
  2735                           
  2736                           ;Config register IDLOC5 @ 0x200005
  2737                           ;	unspecified, using default values
  2738  200005                     	org	2097157
  2739  200005  FF                 	db	255
  2740                           
  2741                           ;Config register IDLOC6 @ 0x200006
  2742                           ;	unspecified, using default values
  2743  200006                     	org	2097158
  2744  200006  FF                 	db	255
  2745                           
  2746                           ;Config register IDLOC7 @ 0x200007
  2747                           ;	unspecified, using default values
  2748  200007                     	org	2097159
  2749  200007  FF                 	db	255
  2750                           
  2751                           	psect	config
  2752                           
  2753                           ; Padding undefined space
  2754  300000                     	org	3145728
  2755  300000  FF                 	db	255
  2756                           
  2757                           ;Config register CONFIG1H @ 0x300001
  2758                           ;	Oscillator Selection bits
  2759                           ;	FOSC = INTIO67, Internal oscillator block
  2760                           ;	4X PLL Enable
  2761                           ;	PLLCFG = OFF, Oscillator used directly
  2762                           ;	Primary clock enable bit
  2763                           ;	PRICLKEN = ON, Primary clock enabled
  2764                           ;	Fail-Safe Clock Monitor Enable bit
  2765                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2766                           ;	Internal/External Oscillator Switchover bit
  2767                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2768  300001                     	org	3145729
  2769  300001  28                 	db	40
  2770                           
  2771                           ;Config register CONFIG2L @ 0x300002
  2772                           ;	Power-up Timer Enable bit
  2773                           ;	PWRTEN = OFF, Power up timer disabled
  2774                           ;	Brown-out Reset Enable bits
  2775                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2776                           ;	Brown Out Reset Voltage bits
  2777                           ;	BORV = 190, VBOR set to 1.90 V nominal
  2778  300002                     	org	3145730
  2779  300002  19                 	db	25
  2780                           
  2781                           ;Config register CONFIG2H @ 0x300003
  2782                           ;	Watchdog Timer Enable bits
  2783                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  2784                           ;	Watchdog Timer Postscale Select bits
  2785                           ;	WDTPS = 32768, 1:32768
  2786  300003                     	org	3145731
  2787  300003  3C                 	db	60
  2788                           
  2789                           ; Padding undefined space
  2790  300004                     	org	3145732
  2791  300004  FF                 	db	255
  2792                           
  2793                           ;Config register CONFIG3H @ 0x300005
  2794                           ;	CCP2 MUX bit
  2795                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  2796                           ;	PORTB A/D Enable bit
  2797                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  2798                           ;	P3A/CCP3 Mux bit
  2799                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  2800                           ;	HFINTOSC Fast Start-up
  2801                           ;	HFOFST = OFF, HFINTOSC output and ready status are delayed by the oscillator stable st
      +                          atus
  2802                           ;	Timer3 Clock input mux bit
  2803                           ;	T3CMX = PORTC0, T3CKI is on RC0
  2804                           ;	ECCP2 B output mux bit
  2805                           ;	P2BMX = PORTB5, P2B is on RB5
  2806                           ;	MCLR Pin Enable bit
  2807                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  2808  300005                     	org	3145733
  2809  300005  B5                 	db	181
  2810                           
  2811                           ;Config register CONFIG4L @ 0x300006
  2812                           ;	Stack Full/Underflow Reset Enable bit
  2813                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2814                           ;	Single-Supply ICSP Enable bit
  2815                           ;	LVP = OFF, Single-Supply ICSP disabled
  2816                           ;	Extended Instruction Set Enable bit
  2817                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2818                           ;	Background Debug
  2819                           ;	DEBUG = 0x1, unprogrammed default
  2820  300006                     	org	3145734
  2821  300006  81                 	db	129
  2822                           
  2823                           ; Padding undefined space
  2824  300007                     	org	3145735
  2825  300007  FF                 	db	255
  2826                           
  2827                           ;Config register CONFIG5L @ 0x300008
  2828                           ;	Code Protection Block 0
  2829                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2830                           ;	Code Protection Block 1
  2831                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2832                           ;	Code Protection Block 2
  2833                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2834                           ;	Code Protection Block 3
  2835                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2836  300008                     	org	3145736
  2837  300008  0F                 	db	15
  2838                           
  2839                           ;Config register CONFIG5H @ 0x300009
  2840                           ;	Boot Block Code Protection bit
  2841                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2842                           ;	Data EEPROM Code Protection bit
  2843                           ;	CPD = OFF, Data EEPROM not code-protected
  2844  300009                     	org	3145737
  2845  300009  C0                 	db	192
  2846                           
  2847                           ;Config register CONFIG6L @ 0x30000A
  2848                           ;	Write Protection Block 0
  2849                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2850                           ;	Write Protection Block 1
  2851                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2852                           ;	Write Protection Block 2
  2853                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2854                           ;	Write Protection Block 3
  2855                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2856  30000A                     	org	3145738
  2857  30000A  0F                 	db	15
  2858                           
  2859                           ;Config register CONFIG6H @ 0x30000B
  2860                           ;	Configuration Register Write Protection bit
  2861                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2862                           ;	Boot Block Write Protection bit
  2863                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2864                           ;	Data EEPROM Write Protection bit
  2865                           ;	WRTD = OFF, Data EEPROM not write-protected
  2866  30000B                     	org	3145739
  2867  30000B  E0                 	db	224
  2868                           
  2869                           ;Config register CONFIG7L @ 0x30000C
  2870                           ;	Table Read Protection Block 0
  2871                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2872                           ;	Table Read Protection Block 1
  2873                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2874                           ;	Table Read Protection Block 2
  2875                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2876                           ;	Table Read Protection Block 3
  2877                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2878  30000C                     	org	3145740
  2879  30000C  0F                 	db	15
  2880                           
  2881                           ;Config register CONFIG7H @ 0x30000D
  2882                           ;	Boot Block Table Read Protection bit
  2883                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2884  30000D                     	org	3145741
  2885  30000D  40                 	db	64
  2886                           tosu	equ	0xFFF
  2887                           tosh	equ	0xFFE
  2888                           tosl	equ	0xFFD
  2889                           stkptr	equ	0xFFC
  2890                           pclatu	equ	0xFFB
  2891                           pclath	equ	0xFFA
  2892                           pcl	equ	0xFF9
  2893                           tblptru	equ	0xFF8
  2894                           tblptrh	equ	0xFF7
  2895                           tblptrl	equ	0xFF6
  2896                           tablat	equ	0xFF5
  2897                           prodh	equ	0xFF4
  2898                           prodl	equ	0xFF3
  2899                           indf0	equ	0xFEF
  2900                           postinc0	equ	0xFEE
  2901                           postdec0	equ	0xFED
  2902                           preinc0	equ	0xFEC
  2903                           plusw0	equ	0xFEB
  2904                           fsr0h	equ	0xFEA
  2905                           fsr0l	equ	0xFE9
  2906                           wreg	equ	0xFE8
  2907                           indf1	equ	0xFE7
  2908                           postinc1	equ	0xFE6
  2909                           postdec1	equ	0xFE5
  2910                           preinc1	equ	0xFE4
  2911                           plusw1	equ	0xFE3
  2912                           fsr1h	equ	0xFE2
  2913                           fsr1l	equ	0xFE1
  2914                           bsr	equ	0xFE0
  2915                           indf2	equ	0xFDF
  2916                           postinc2	equ	0xFDE
  2917                           postdec2	equ	0xFDD
  2918                           preinc2	equ	0xFDC
  2919                           plusw2	equ	0xFDB
  2920                           fsr2h	equ	0xFDA
  2921                           fsr2l	equ	0xFD9
  2922                           status	equ	0xFD8

Data Sizes:
    Strings     57
    Constant    192
    Data        130
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      70
    BANK0           160      0     120
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> LCD_SetFont@buffer(COMRAM[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> LCD_SetFont@buffer(COMRAM[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> blocks_chars(CODE[64]), square_four_chars(CODE[64]), tron_bold_chars(CODE[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> blocks_chars(CODE[64]), square_four_chars(CODE[64]), tron_bold_chars(CODE[64]), 

    LCD_createChar@charmap	PTR const unsigned char  size(2) Largest target is 8
		 -> LCD_SetFont@buffer(COMRAM[8]), 

    LCD_puts@a	PTR unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[9]), STR_3(CODE[18]), STR_2(CODE[16]), STR_1(CODE[14]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(BITBIGSFRll[1]), 

    display.TRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(BITBIGSFRll[1]), 

    LCDisplay.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(BITBIGSFRll[1]), 

    LCDisplay.TRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(BITBIGSFRll[1]), 

    S80$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(BITBIGSFRll[1]), 

    LCD.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(BITBIGSFRll[1]), 

    S80$TRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(BITBIGSFRll[1]), 

    LCD.TRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(BITBIGSFRll[1]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> LCD_SetFont@buffer(COMRAM[8]), 

    current_digits	PTR const unsigned char [4] size(2) Largest target is 40
		 -> NULL(NULL[0]), blocks_digits(BANK0[40]), square_four_digits(BANK0[40]), tron_bold_digits(BANK0[40]), 

    LCD_SetFont@char_data	PTR const unsigned char [8] size(2) Largest target is 64
		 -> blocks_chars(CODE[64]), square_four_chars(CODE[64]), tron_bold_chars(CODE[64]), 


Critical Paths under _main in COMRAM

    _main->_LCD_Init
    _LCD_puts->_LCD_putc
    _LCD_SetFont->_LCD_createChar
    _LCD_createChar->_LCD_Command
    _LCD_Init->_LCD_Command
    _LCD_DrawBigDigit->_LCD_Command
    _LCD_putc->_LCD_Write
    _LCD_Command->_LCD_Write
    _LCD_Write->_LCD_Out

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4431
                                             42 COMRAM     2     2      0
                        _LCD_Command
                   _LCD_DrawBigDigit
                           _LCD_Init
                        _LCD_SetFont
                           _LCD_puts
                           _MCU_Init
 ---------------------------------------------------------------------------------
 (1) _MCU_Init                                             0     0      0       0
                          _RTCC_Init
 ---------------------------------------------------------------------------------
 (2) _RTCC_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_puts                                             6     4      2     548
                                             17 COMRAM     6     4      2
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (1) _LCD_SetFont                                         14    14      0    1051
                                             23 COMRAM    14    14      0
                     _LCD_createChar
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (2) _LCD_createChar                                       5     3      2     496
                                             18 COMRAM     5     3      2
                        _LCD_Command
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                            24    14     10     388
                                             18 COMRAM    24    14     10
                        _LCD_Command
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_DrawBigDigit                                     5     3      2    2290
                                             18 COMRAM     5     3      2
                        _LCD_Command
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (2) _LCD_putc                                             3     3      0     154
                                             14 COMRAM     3     3      0
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          4     4      0     154
                                             14 COMRAM     4     4      0
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (3) _LCD_Write                                            4     4      0     110
                                             10 COMRAM     4     4      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (4) _LCD_Out                                             10    10      0      88
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManagerHigh                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Command
     _LCD_Write
       _LCD_Out
   _LCD_DrawBigDigit
     _LCD_Command
     _LCD_putc
       _LCD_Write
   _LCD_Init
     _LCD_Command
     _LCD_Write
   _LCD_SetFont
     _LCD_createChar
       _LCD_Command
       _LCD_putc
     _memcpy
   _LCD_puts
     _LCD_putc
   _MCU_Init
     _RTCC_Init

 _INTERRUPT_InterruptManagerHigh (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      78       4       75.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      46       1       74.5%
BITBIGSFRll         45      0       0      21        0.0%
BITBIGSFRhllll      3B      0       0      19        0.0%
BITBIGSFRhlh        19      0       0      16        0.0%
BITBIGSFRlh          F      0       0      20        0.0%
BITBIGSFRhh          D      0       0      15        0.0%
BITBIGSFRhlllh       2      0       0      18        0.0%
BITBIGSFRhllh        1      0       0      17        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BE      22        0.0%
DATA                 0      0      BE      24        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Sep 27 00:08:10 2025

                          ?_LCD_Command 0001                                      l31 0E4C  
                                    l42 0798                                      l51 0890  
                                    l39 08DC                       _square_four_chars 0641  
              __end_of_LCD_DrawBigDigit 08DE                 __end_of_tron_bold_chars 06C1  
                          ?_LCD_SetFont 0001                                     l202 0AAA  
                                   l220 10B4                                     l214 0D86  
                                   l118 0ACC                                     l223 10EE  
                                   l240 1074                                     l217 0F2C  
                                   l171 1110                                     l229 0FDC  
                                   l168 1128                                     l920 102E  
                                   l990 1106                                     l992 1108  
                                   l994 110A                                     l986 10F0  
                                   l996 110C                                     l988 10FA  
                                   l998 110E                                     _LCD 003D  
                                   u600 0D62                                     u504 0C58  
                                   u601 0D5E                                     u505 0C54  
                                   u514 0C70                                     u515 0C6C  
                                   u540 0CCC                                     u524 0C88  
                                   u700 0720                                     u541 0CC8  
                                   u525 0C84                                     u701 071C  
                                   u614 0D74                                     u534 0CA0  
                                   u710 0734                                     u615 0D70  
                                   u535 0C9C                                     u711 0730  
                                   u560 0CFE                                     u624 0EE0  
                                   u720 0750                                     u800 0902  
                                   u561 0CFA                                     u625 0EDC  
                                   u721 074C                                     u801 08FE  
                                   u554 0CDE                                     u634 0F14  
                                   u730 076E                                     u555 0CDA  
                                   u635 0F10                                     u731 076A  
                                   u580 0D30                                     u644 108A  
                                   u740 078C                                     u660 102E  
                                   u581 0D2C                                     u645 1086  
                                   u741 0788                                     u661 102A  
                                   u574 0D10                                     u654 10CA  
                                   u750 07FC                                     u814 0914  
                                   u670 1074                                     u910 0FDC  
                                   u575 0D0C                                     u655 10C6  
                                   u751 07F8                                     u815 0910  
                                   u671 1070                                     u911 0FD8  
                                   u760 0828                                     u904 0A3A  
                                   u824 092C                                     u680 0E4C  
                                   u761 0824                                     u905 0A36  
                                   u825 0928                                     u681 0E48  
                                   u921 0ABA                                     u594 0D42  
                                   u770 0856                                     u690 070E  
                                   u834 0944                                     u930 0B3C  
                                   u595 0D3E                                     u771 0852  
                                   u691 070A                                     u835 0940  
                                   u931 0B38                                     u780 0884  
                                   u844 095C                                     u940 0B4E  
                                   u781 0880                                     u845 0958  
                                   u941 0B4A                                     u870 09CA  
                                   u854 0974                                     u871 09C6  
                                   u855 0970                                     u791 08E8  
                                   u880 09EA                                     u864 098C  
                                   u881 09E6                                     u865 0988  
                                   u890 0A0A                                     u891 0A06  
                                   u967 0B1E                                     u977 0A1E  
                                   u987 0A5E                                     u997 0A74  
                       LCD_Init@display 0013                      _square_four_digits 0088  
                                   wreg 000FE8                         __end_of_LCD_Out 0D88  
                                  l1300 0ECE                                    l1302 0EF2  
                                  l1310 10AC                                    l1304 0F02  
                                  l1312 10B8                                    l1400 07FC  
                                  l1320 0FF2                                    l1306 1078  
                                  l1314 10DC                                    l1410 0862  
                                  l1402 0808                                    l1330 1032  
                                  l1322 1000                                    l1074 1112  
                                  l1308 10A2                                    l1316 10E6  
                                  l1412 0884                                    l1404 0828  
                                  l1420 08F0                                    l1340 1062  
                                  l1332 104C                                    l1324 1004  
                                  l1076 1124                                    l1500 0ADE  
                                  l1406 0834                                    l1414 0890  
                                  l1430 09EA                                    l1422 0902  
                                  l1342 1064                                    l1326 1010  
                                  l1318 0FDE                                    l1350 0DB6  
                                  l1280 0C46                                    l1416 08B6  
                                  l1408 0856                                    l1432 09F2  
                                  l1440 0A18                                    l1424 09B2  
                                  l1328 1014                                    l1344 0D8A  
                                  l1512 0AF0                                    l1290 0D22  
                                  l1282 0CBE                                    l1450 0A6E  
                                  l1442 0A28                                    l1434 0A0A  
                                  l1426 09CA                                    l1418 08DE  
                                  l1338 1050                                    l1362 0E00  
                                  l1346 0D8E                                    l1354 0DCA  
                                  l1530 0B2C                                    l1506 0AE4  
                                  l1292 0D30                                    l1284 0CCC  
                                  l1380 0734                                    l1460 0A96  
                                  l1452 0A7E                                    l1444 0A52  
                                  l1436 0A12                                    l1428 09D2  
                                  l1364 0E2C                                    l1348 0DA2  
                                  l1356 0DFC                                    l1540 0B5C  
                                  l1532 0B3C                                    l1524 0B02  
                                  l1516 0AF6                                    l1294 0D54  
                                  l1286 0CF0                                    l1390 077A  
                                  l1382 0740                                    l1374 06FE  
                                  l1470 0AA2                                    l1462 0A9A  
                                  l1454 0A84                                    l1446 0A58  
                                  l1366 0E3A                                    l1606 0B8E  
                                  l1542 0B66                                    l1550 0BAC  
                                  l1534 0B3E                                    l1526 0B08  
                                  l1296 0D62                                    l1288 0CFE  
                                  l1392 078C                                    l1384 0750  
                                  l1376 070E                                    l1472 0AA8  
                                  l1456 0A8A                                    l1448 0A68  
                                  l1368 0E3C                                    l1608 0DDE  
                                  l1480 0FB0                                    l1552 0C38  
                                  l1544 0B70                                    l1536 0B4E  
                                  l1528 0B14                                    l1298 0EC8  
                                  l1386 075C                                    l1394 0798  
                                  l1378 0724                                    l1458 0A90  
                                  l1482 0FB4                                    l1538 0B52  
                                  l1396 07B6                                    l1388 076E  
                                  l1468 0A9C                                    l1476 0F88  
                                  l1548 0B7A                                    l1484 0AAC  
                                  l1398 07DC                                    l1478 0F94  
                                  l1486 0AB0                                    l1496 0AD2  
                                  l1488 0AC6                                    STR_1 06E3  
                                  STR_2 06D3                                    STR_3 06C1  
                                  STR_4 06F1                                    u1007 0EF8  
                                  _main 0AAC                                    fsr2h 000FDA  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  fsr2l 000FD9                                    btemp 0047  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 005A                             LCD_Init@cmd 002A  
                          ___param_bank 000000               __end_of_square_four_chars 0681  
                      __end_of_LCD_Init 0AAC                        __end_of_LCD_putc 10F0  
                      __end_of_LCD_puts 0FDE                                   ?_main 0001  
                      __end_of_MCU_Init 112A                                   i2l111 004C  
                                 i2l112 0056                                   _TMR0H 000FD7  
                                 _TMR0L 000FD6                                   _PORTA 000F80  
                                 _PORTB 000F81                                   _PORTC 000F82  
                                 _TRISA 000F92                                   _TRISB 000F93  
                                 _TRISC 000F94                                   tablat 000FF5  
                                 plusw0 000FEB                                   plusw1 000FE3  
                                 plusw2 000FDB                                   ttemp5 0048  
                                 ttemp6 004B                                   ttemp7 004F  
                                 status 000FD8                                   wtemp8 0048  
                       __initialization 0F2E                            __end_of_main 0C44  
                          LCD_SetFont@i 0025                                  ??_main 002B  
                  __end_of_blocks_chars 0641                           __activetblptr 000002  
                             ??_LCD_Out 0001                       __end_of_LCD_Write 0F2E  
                                _ANSELA 000F38                                  _ANSELB 000F39  
                                _ANSELC 000F3A                                  i2l1150 002A  
                                i2l1152 0040                                  i2l1144 000A  
                                i2l1154 0054                                  i2l1146 0018  
                                i2l1148 0026                   LCD_DrawBigDigit@digit 0017  
                       LCD_SetFont@FONT 0022                       __end_of_RTCC_Init 1112  
                                _memcpy 0FDE                                  clear_0 0F74  
                        _LCD_createChar 1030                                  isa$std 000001  
                          __pdataCOMRAM 003D                            __mediumconst 0000  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8        ??_INTERRUPT_InterruptManagerHigh 0001  
       ?_INTERRUPT_InterruptManagerHigh 0001                              __accesstop 0060  
               __end_of__initialization 0F7A                               ?_LCD_Init 0013  
                             ?_LCD_putc 0001                               ?_LCD_puts 0012  
                         ___rparam_used 000001                               ?_MCU_Init 0001  
                        __pcstackCOMRAM 0001                            __pidataBANK0 0E4E  
                __end_of_LCD_createChar 1076                       ?_LCD_DrawBigDigit 0013  
                             LCD_putc@c 0011                               LCD_puts@a 0012  
                             LCD_puts@i 0016                      ??_LCD_DrawBigDigit 0015  
                            ??_LCD_Init 001D                              ??_LCD_putc 000F  
                            ??_LCD_puts 0014                              ??_MCU_Init 0001  
                       ?_LCD_createChar 0013                                 ?_memcpy 0001  
                               _LCD_Out 0C44                   LCD_createChar@charmap 0013  
                               i2u43_40 0018                                 i2u43_41 0014  
                               i2u44_40 0026                                 i2u44_41 0022  
                               i2u45_40 0040                                 i2u45_41 003C  
                          _blocks_chars 0601                                 __Hparam 0000  
                               __Lparam 0000                           LCD_Write@data 000E  
                          __psmallconst 0600                                 __pcinit 0F2E  
                               __ramtop 0600                                 __ptext0 0AAC  
                               __ptext1 1112                                 __ptext2 10F0  
                               __ptext3 0F88                                 __ptext4 0D88  
                               __ptext5 0FDE                                 __ptext6 1030  
                               __ptext7 08DE                                 __ptext8 06FC  
                               __ptext9 10B6                               _T0CONbits 000FD5  
                               _counter 003C                               _LCDUpdate 003B  
                             _LCD_Write 0EC6                    end_of_initialization 0F7A  
                               memcpy@d 0007                                 memcpy@n 0005  
                               memcpy@s 0009                          LCD_Command@cmd 0012  
                         __Lmediumconst 0000                               _LCDisplay 002D  
                               postdec1 000FE5                                 postinc0 000FEE  
                             _RTCC_Init 10F0                              ?_LCD_Write 0001  
                         ??_LCD_Command 000F                           __pidataCOMRAM 112A  
                            ?_RTCC_Init 0001                           ??_LCD_SetFont 0018  
                        __end_of_memcpy 1030                     start_initialization 0F2E  
                      ??_LCD_createChar 0015                    LCD_DrawBigDigit@xpos 0013  
                  LCD_DrawBigDigit@ypos 0014                             __pdataBANK0 0060  
                              ??_memcpy 0007                          _current_digits 0039  
                              ?_LCD_Out 0001                     __end_of_LCD_Command 10B6  
                           __pbssCOMRAM 002D                                LCD_Out@c 000A  
                   __end_of_LCD_SetFont 0E4E                             ??_LCD_Write 000B  
                             __pintcode 0008                             ??_RTCC_Init 0001  
                           __smallconst 0600                    LCD_SetFont@char_data 0023  
                              _LCD_Init 08DE                                _LCD_putc 10B6  
                              _LCD_puts 0F88                                _MCU_Init 1112  
                              _RCONbits 000FD0                             _LCD_Command 1076  
                LCD_createChar@location 0016                             _LCD_SetFont 0D88  
                           _INTCON2bits 000FF1                               copy_data0 0F42  
                             copy_data1 0F62                           _blocks_digits 0060  
                      _LCD_DrawBigDigit 06FC                                __Hrparam 0000  
                             memcpy@tmp 000B                                __Lrparam 0000  
                      _tron_bold_digits 00B0                                __ptext10 1076  
                              __ptext11 0EC6                                __ptext12 0C44  
                     LCD_SetFont@buffer 001A                                isa$xinst 000000  
                              int$flags 0047                              _INTCONbits 000FF2  
                              memcpy@d1 0001                                memcpy@s1 0003  
                       _tron_bold_chars 0681                                intlevel2 0000  
                            _OSCCONbits 000FD3                         LCD_createChar@i 0017  
__end_of_INTERRUPT_InterruptManagerHigh 005A          _INTERRUPT_InterruptManagerHigh 0008  
                            _RTCC_Count 0037  
